<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AmazonCheckoutAddProductDetail">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Prepares product to be checked out"/>
            <title value="Amazon Pay Add Product to Cart from Detail Page"/>
            <description value="Creates and loads simple product and adds it to cart using Amazon Pay button on product detail page."/>
            <severity value="BLOCKER"/>
            <group value="amazon_checkout"/>
        </annotations>

        <before>
            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </before>

        <after>
            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </after>

        <!--Go to product page-->
        <amOnPage url="$$createSimpleProduct.custom_attributes[url_key]$$.html" stepKey="navigateToSimpleProductPage"/>
        <waitForPageLoad stepKey="waitForPageLoadCatalog" time="30"/>

        <!--Add to cart via Amazon Pay button on product page-->
        <waitForElement selector="{{AmazonCheckoutSection.productPayButton}}" time="30" stepKey="apWaitForPayButton"/>
        <waitForElement selector="#OffAmazonPaymentsWidgets0" time="30" stepKey="apWaitForPayButton2"/>
        <waitForJS function="return document.getElementById('{{AmazonCheckoutSection.productPayButton}}'.substr(1)).clientHeight > 10;" stepKey="waitForPayButtonClickable" />
        <click selector="{{AmazonCheckoutSection.productPayButton}}" stepKey="clickProductPayButton"/>

        <!--Login (redirect)-->
        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />
    </test>
    <test name="AmazonCheckoutAddProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Prepares product to be checked out"/>
            <title value="Amazon Pay Add Product to Cart"/>
            <description value="Adds product to cart."/>
            <severity value="BLOCKER"/>
            <group value="amazon_checkout"/>
        </annotations>

        <before>
            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </before>

        <after>
            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </after>

        <!--Go to product page-->
        <amOnPage url="$$createSimpleProduct.custom_attributes[url_key]$$.html" stepKey="navigateToSimpleProductPage"/>
        <waitForPageLoad stepKey="waitForPageLoadCatalog"/>

        <!--Add Product to Shopping Cart-->
        <actionGroup ref="addToCartFromStorefrontProductPage" stepKey="addToCartFromStorefrontProductPage">
            <argument name="productName" value="$$createSimpleProduct.name$$"/>
        </actionGroup>
    </test>
    <test name="AmazonCheckoutProductDetail" extends="AmazonCheckoutAddProductDetail">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
            <title value="Amazon Pay Checkout from Product Details"/>
            <description value="Perform checkout from product details page and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutDisplayLanguage" extends="AmazonCheckoutAddProductDetail">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Complete checkout with non-default display language setting"/>
            <title value="Amazon Pay Checkout Display Language"/>
            <description value="Perform checkout with non-default display language and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <before>
            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
            <magentoCLI command="config:set payment/amazon_payment/button_display_language de_DE" stepKey="setDeDisplayLanguage"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </before>

        <after>
            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
            <magentoCLI command="config:set payment/amazon_payment/button_display_language ''" stepKey="setDeDisplayLanguage"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </after>

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutFreeShipping" extends="AmazonCheckoutAddProductDetail">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Complete checkout with free shipping"/>
            <title value="Amazon Pay Checkout Free Shipping"/>
            <description value="Perform checkout with free shipping"/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <before>
            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
            <createData entity="SimpleTwo" stepKey="createSimpleProduct"/>
            <magentoCLI command="config:set carriers/freeshipping/active 1" stepKey="enableFreeShipping"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </before>

        <after>
            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
            <magentoCLI command="config:set carriers/freeshipping/active 0" stepKey="disableFreeShipping"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </after>

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutConfigurableProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Complete checkout with configurable product"/>
            <title value="Amazon Pay Checkout Configurable Product"/>
            <description value="Perform checkout with configurable product and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <before>
            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
            <!-- Create Default Category -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>

            <!-- Create an attribute with three options to be used in the first child product -->
            <createData entity="productAttributeWithTwoOptions" stepKey="createConfigProductAttribute"/>
            <createData entity="productAttributeOption1" stepKey="createConfigProductAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption2" stepKey="createConfigProductAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>
            <createData entity="productAttributeOption3" stepKey="createConfigProductAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Add the attribute just created to default attribute set -->
            <createData entity="AddToDefaultSet" stepKey="createConfigAddToAttributeSet">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </createData>

            <!-- Get the first option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="1" stepKey="getConfigAttributeOption1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the second option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="2" stepKey="getConfigAttributeOption2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Get the third option of the attribute created -->
            <getData entity="ProductAttributeOptionGetter" index="3" stepKey="getConfigAttributeOption3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
            </getData>

            <!-- Create Configurable product -->
            <createData entity="BaseConfigurableProduct" stepKey="createConfigProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <!-- Create a simple product and give it the attribute with the first option -->
            <createData entity="ApiSimpleOne" stepKey="createConfigChildProduct1">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <field key="price">10.00</field>
            </createData>

            <!--Create a simple product and give it the attribute with the second option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct2">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
                <field key="price">20.00</field>
            </createData>

            <!--Create a simple product and give it the attribute with the Third option -->
            <createData entity="ApiSimpleTwo" stepKey="createConfigChildProduct3">
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
                <field key="price">30.00</field>
            </createData>

            <!-- Create the configurable product -->
            <createData entity="ConfigurableProductThreeOptions" stepKey="createConfigProductOption">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigProductAttribute"/>
                <requiredEntity createDataKey="getConfigAttributeOption1"/>
                <requiredEntity createDataKey="getConfigAttributeOption2"/>
                <requiredEntity createDataKey="getConfigAttributeOption3"/>
            </createData>

            <!-- Add the first simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild1">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct1"/>
            </createData>

            <!-- Add the second simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild2">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct2"/>
            </createData>

            <!-- Add the third simple product to the configurable product -->
            <createData entity="ConfigurableProductAddChild" stepKey="createConfigProductAddChild3">
                <requiredEntity createDataKey="createConfigProduct"/>
                <requiredEntity createDataKey="createConfigChildProduct3"/>
            </createData>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
        </before>

        <after>
            <deleteData createDataKey="createConfigChildProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="createConfigChildProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="createConfigChildProduct3" stepKey="deleteSimpleProduct3"/>
            <deleteData createDataKey="createConfigProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createConfigProductAttribute" stepKey="deleteProductAttribute"/>
            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
        </after>

        <!-- Add Configurable Product to the cart -->
        <actionGroup ref="StorefrontAddConfigurableProductToTheCartActionGroup" stepKey="addConfigurableProductToCart">
            <argument name="urlKey" value="$$createConfigProduct.custom_attributes[url_key]$$" />
            <argument name="productAttribute" value="$$createConfigProductAttribute.default_value$$"/>
            <argument name="productOption" value="$$getConfigAttributeOption2.label$$"/>
            <argument name="qty" value="2"/>
        </actionGroup>

        <!--Open minicart-->
        <waitForElement selector="{{StorefrontMinicartSection.showCart}}" stepKey="waitForShowMinicart" />
        <waitForElement selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForCartLink" />
        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickShowMinicart" />

        <!--Login (redirect)-->
        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutGroupedProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Complete checkout with bundled product"/>
            <title value="Amazon Pay Checkout Bundled Product"/>
            <description value="Perform checkout with bundled product and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <before>
            <createData entity="SampleAmazonPaymentConfig" stepKey="SampleAmazonPaymentConfigData"/>
            <!--Create Grouped product with three simple product -->
            <createData entity="ApiProductWithDescription" stepKey="simple1" before="simple2">
                <field key="price">100.00</field>
            </createData>
            <createData entity="ApiProductWithDescription" stepKey="simple2" before="simple3">
                <field key="price">200.00</field>
            </createData>
            <createData entity="ApiProductWithDescription" stepKey="simple3" before="product">
                <field key="price">300.00</field>
            </createData>
            <createData entity="ApiGroupedProduct" stepKey="product"/>
            <createData entity="OneSimpleProductLink" stepKey="addProductOne">
                <requiredEntity createDataKey="product"/>
                <requiredEntity createDataKey="simple1"/>
            </createData>
            <updateData entity="OneMoreSimpleProductLink" createDataKey="addProductOne" stepKey="addProductTwo">
                <requiredEntity createDataKey="product"/>
                <requiredEntity createDataKey="simple2"/>
            </updateData>
            <updateData entity="OneMoreSimpleProductLink" createDataKey="addProductOne" stepKey="addProductThree">
                <requiredEntity createDataKey="product"/>
                <requiredEntity createDataKey="simple3"/>
            </updateData>
            <magentoCLI command="indexer:reindex" stepKey="reindex"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </before>

        <after>
            <createData entity="DefaultAmazonPaymentConfig" stepKey="DefaultAmazonPaymentConfig"/>
            <deleteData createDataKey="simple1" stepKey="deleteProduct1"/>
            <deleteData createDataKey="simple2" stepKey="deleteProduct2"/>
            <deleteData createDataKey="simple3" stepKey="deleteProduct3"/>
            <deleteData createDataKey="product" stepKey="deleteGroupProduct"/>
            <magentoCLI command="cache:flush" stepKey="flushCache"/>
        </after>

        <!-- Fill Quantity and add Product to the cart -->
        <actionGroup ref="StorefrontAddThreeGroupedProductToTheCartActionGroup" stepKey="addGropedProductsToTheCart">
            <argument name="urlKey" value="$$product.custom_attributes[url_key]$$"/>
            <argument name="product1" value="$$simple1.name$$"/>
            <argument name="product2" value="$$simple2.name$$"/>
            <argument name="product3" value="$$simple3.name$$"/>
            <argument name="qty1" value="1"/>
            <argument name="qty2" value="2"/>
            <argument name="qty3" value="3"/>
        </actionGroup>

        <!--Open minicart-->
        <waitForElement selector="{{StorefrontMinicartSection.showCart}}" stepKey="waitForShowMinicart" />
        <waitForElement selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForCartLink" />
        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickShowMinicart" />

        <!--Login (redirect)-->
        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutCart" extends="AmazonCheckoutAddProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
            <title value="Amazon Pay Checkout from Cart"/>
            <description value="Perform checkout from cart page and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <!--Go to Cart-->
        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />

        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>

        <!--Login (popup)-->
        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutMiniCart" extends="AmazonCheckoutAddProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
            <title value="Amazon Pay Checkout from Minicart"/>
            <description value="Perform checkout from minicart and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <!--Open minicart-->
        <waitForElement selector="{{StorefrontMinicartSection.showCart}}" stepKey="waitForShowMinicart" />
        <waitForElement selector="{{StorefrontMinicartSection.viewAndEditCart}}" stepKey="waitForCartLink" />
        <click selector="{{StorefrontMinicartSection.showCart}}" stepKey="clickShowMinicart" />

        <!--Login (redirect)-->
        <click selector="{{AmazonCheckoutSection.miniCartPayButton}}" stepKey="clickAmazonCartButton"/>
        <actionGroup ref="AmazonLoginRedirectActionGroup" stepKey="AmazonLoginRedirectActionGroup" />

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutPage" extends="AmazonCheckoutAddProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
            <title value="Amazon Pay Checkout from Checkout page"/>
            <description value="Perform checkout from checkout page and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <!--Go to Checkout-->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>

        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>

        <!--Login (popup)-->
        <click selector="{{AmazonCheckoutSection.checkoutPayButton}}" stepKey="clickAmazonCartButton"/>
        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutCustomer" extends="AmazonCheckoutAddProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="Success page elements are presented for placed order with Amazon Pay"/>
            <title value="Amazon Pay Checkout from Customer Account page"/>
            <description value="Perform checkout after logging in from customer account page and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_checkout"/>
        </annotations>

        <!--Go to Customer page-->
        <amOnPage url="/customer/account/" stepKey="goToMyAccountPage" />

        <!--Login (popup)-->
        <click selector="{{AmazonCheckoutSection.loginButton}}" stepKey="clickAmazonCartButton"/>
        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
    <test name="AmazonCheckoutSCASuccess" extends="AmazonCheckoutAddProduct">
        <annotations>
            <features value="Amazon Pay"/>
            <stories value="(SCA) Success page elements are presented for placed order with Amazon Pay"/>
            <title value="(SCA) Amazon Pay Checkout from Cart"/>
            <description value="Perform checkout from cart page and ensure Success page."/>
            <severity value="CRITICAL"/>
            <group value="amazon_sca"/>
        </annotations>

        <!--Go to Cart-->
        <actionGroup ref="StorefrontOpenCartFromMinicartActionGroup" stepKey="cartOpenCart" />

        <waitForAjaxLoad stepKey="waitForAjaxLoad"/>

        <!--Login (popup)-->
        <click selector="{{AmazonCheckoutSection.cartPayButton}}" stepKey="clickAmazonCartButton"/>
        <actionGroup ref="AmazonLoginPopupActionGroup" stepKey="AmazonLoginPopupActionGroup" />

        <!--Place order-->
        <actionGroup ref="AmazonCheckoutSubmitActionGroup" stepKey="AmazonCheckoutSubmitActionGroup" />
    </test>
</tests>
