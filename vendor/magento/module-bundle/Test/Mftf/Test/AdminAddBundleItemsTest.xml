<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminAddBundleItemsTest">
        <annotations>
            <features value="Bundle"/>
            <stories value="Create/Edit bundle product in Admin"/>
            <title value="Admin should be able to add/edit bundle items when creating/editing a bundle product"/>
            <description value="Admin should be able to add/edit bundle items when creating/editing a bundle product"/>
            <severity value="BLOCKER"/>
            <testCaseId value="MC-223"/>
            <group value="Bundle"/>
        </annotations>
        <before>
            <!--Creating data-->
            <createData entity="_defaultCategory" stepKey="createPreReqCategory"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct0"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct1"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2"/>
            <createData entity="SimpleProduct2" stepKey="simpleProduct3"/>
            <magentoCron stepKey="runCronIndex" groups="index"/>
            <!--Admin login-->
            <actionGroup stepKey="loginToAdminPanel" ref="AdminLoginActionGroup"/>
        </before>
        <after>
            <!--Deleting data-->
            <deleteData createDataKey="createPreReqCategory" stepKey="deletePreReqCategory"/>
            <deleteData createDataKey="simpleProduct0" stepKey="deleteSimpleProduct0"/>
            <deleteData createDataKey="simpleProduct1" stepKey="deleteSimpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="deleteSimpleProduct2"/>
            <deleteData createDataKey="simpleProduct3" stepKey="deleteSimpleProduct3"/>
            <!--Logging out-->
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!--Go to bundle product creation page-->
        <actionGroup ref="AdminOpenNewProductFormPageActionGroup" stepKey="goToBundleProductCreationPage">
            <argument name="attributeSetId" value="{{BundleProduct.set}}"/>
            <argument name="productType" value="{{BundleProduct.type}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleProductCreatePageToLoad"/>


        <!-- Add two bundle items -->
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="conditionallyOpenSectionBundleItems"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="clickAddOption3"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleOptions"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="fillOptionTitle"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="selectInputType"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="clickAddProductsToOption"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="filterBundleProductOptions"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="selectFirstGridRow"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="filterBundleProductOptions2"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="selectFirstGridRow2"/>
        <actionGroup ref="AddBundleOptionWithTwoProductsActionGroup" stepKey="clickAddSelectedBundleProducts">
            <argument name="x" value="0"/>
            <argument name="n" value="1"/>
            <argument name="prodOneSku" value="$$simpleProduct0.sku$$"/>
            <argument name="prodTwoSku" value="$$simpleProduct1.sku$$"/>
            <argument name="optionTitle" value="{{BundleProduct.optionTitle1}}"/>
            <argument name="inputType" value="{{BundleProduct.optionInputType1}}"/>
        </actionGroup>

        <!-- Check that Bundle Options initialized with proper quantity -->
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '0')}}" stepKey="grabbedFirstBundleOptionQuantity"/>
        <assertEquals stepKey="assertFirstBundleOptionDefaultQuantity">
            <expectedResult type="string">50</expectedResult>
            <actualResult type="string">$grabbedFirstBundleOptionQuantity</actualResult>
        </assertEquals>
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '1')}}" stepKey="grabbedSecondBundleOptionQuantity"/>
        <assertEquals stepKey="assertSecondBundleOptionDefaultQuantity">
            <expectedResult type="string">50</expectedResult>
            <actualResult type="string">$grabbedSecondBundleOptionQuantity</actualResult>
        </assertEquals>

        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="fillProductDefaultQty1"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="fillProductDefaultQty2"/>

        <!--Fill out ancillary data on bundle product-->
        <actionGroup ref="AncillaryPrepBundleProductActionGroup" stepKey="createBundledProductForTwoSimpleProducts">
            <argument name="bundleProduct" value="BundleProduct"/>
        </actionGroup>

        <!--Save the product-->
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveButton"/>
        <actionGroup ref="AssertMessageInAdminPanelActionGroup" stepKey="messageYouSavedTheProductIsShown">
            <argument name="message" value="You saved the product."/>
        </actionGroup>

        <!--Checking on admin side-->
        <scrollToTopOfPage stepKey="scroll"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenSectionBundleItems2"/>
        <seeElement selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" stepKey="LookingForBundleItemPresence"/>

        <!--Checking on customer side-->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="GoToProductPage">
            <argument name="productUrl" value="{{BundleProduct.urlKey}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleProductPageToLoad"/>
        <seeElement selector="{{StorefrontBundledSection.customizeProduct}}" stepKey="LookingForAbilityToAddOptions"/>
        <click selector="{{StorefrontBundledSection.customizeProduct}}" stepKey="clickButtonToCustomize"/>
        <waitForPageLoad stepKey="waitCustomizationDropDown"/>
        <seeElement selector="{{StorefrontBundledSection.customizableBundleItemOption}}" stepKey="seeBundleItem"/>

        <!--Add another bundle option with 2 items-->
        <!--Go to bundle product creation page-->
        <actionGroup ref="AdminOpenCatalogProductPageActionGroup" stepKey="goToCatalogProductPage"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="ClickOnButtonToRemoveFiltersIfPresent"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="WaitForClear"/>
        <actionGroup ref="FilterProductGridByNameActionGroup" stepKey="filterBundleProductOptionsDownToName">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>
        <actionGroup ref="OpenEditProductOnBackendActionGroup" stepKey="clickOnBundleProductToEdit">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="conditionallyOpenSectionBundleItemsToEdit"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="clickAddOption"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleOptionsToAppear"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="fillNewestOptionTitle"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="selectNewInputType"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="clickAddProductsToNewOption"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="filterNewBundleProductOptions"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="selectNewFirstGridRow"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="filterNewBundleProductOptions2"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="selectNewFirstGridRow2"/>
        <actionGroup ref="AddBundleOptionWithTwoProductsActionGroup" stepKey="clickAddNewSelectedBundleProducts">
            <argument name="x" value="1"/>
            <argument name="n" value="2"/>
            <argument name="prodOneSku" value="$$simpleProduct2.sku$$"/>
            <argument name="prodTwoSku" value="$$simpleProduct3.sku$$"/>
            <argument name="optionTitle" value="{{BundleProduct.optionTitle1}}"/>
            <argument name="inputType" value="{{BundleProduct.optionInputType1}}"/>
        </actionGroup>

        <!-- Check that existing Bundle Options do not loose user input quantity values  -->
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '0')}}" stepKey="grabbedFirstBundleOptionQuantityAfterUserInput"/>
        <assertEquals stepKey="assertFirstBundleOptionDefaultQuantityAfterUserInput">
            <expectedResult type="string">50</expectedResult>
            <actualResult type="string">$grabbedFirstBundleOptionQuantityAfterUserInput</actualResult>
        </assertEquals>
        <grabValueFrom selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '1')}}" stepKey="grabbedSecondBundleOptionQuantityAfterUserInput"/>
        <assertEquals stepKey="assertSecondBundleOptionDefaultQuantityAfterUserInput">
            <expectedResult type="string">50</expectedResult>
            <actualResult type="string">$grabbedSecondBundleOptionQuantityAfterUserInput</actualResult>
        </assertEquals>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="fillNewProductDefaultQty1"/>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="fillNewProductDefaultQty2"/>
        <!--Save the product-->
        <actionGroup ref="AdminProductFormSaveActionGroup" stepKey="clickSaveButtonAgain"/>
        <actionGroup ref="AssertMessageInAdminPanelActionGroup" stepKey="messageYouSavedTheProductIsShownAgain">
            <argument name="message" value="You saved the product."/>
        </actionGroup>

        <!--Checking on admin side-->
        <scrollToTopOfPage stepKey="scrollAgain"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenNewSectionBundleItems2"/>
        <seeElement selector="{{AdminProductFormBundleSection.bundleOptionXTitle('1')}}" stepKey="LookingForNewBundleItemPresence"/>

        <!--Checking on customer side-->
        <actionGroup ref="StorefrontOpenProductPageActionGroup" stepKey="GoToProductPageAgain">
            <argument name="productUrl" value="{{BundleProduct.urlKey}}"/>
        </actionGroup>
        <comment userInput="Comment is added to preserve the step key for backward compatibility" stepKey="waitForBundleProductPageToLoadAgain"/>
        <seeElement selector="{{StorefrontBundledSection.customizeProduct}}" stepKey="LookingForAbilityToAddBothOptions"/>
        <click selector="{{StorefrontBundledSection.customizeProduct}}" stepKey="clickButtonAgainToCustomize"/>
        <waitForPageLoad stepKey="waitForBothCustomizationDropDown"/>
        <seeElement selector="{{StorefrontBundledSection.customizableBundleItemOption2}}" stepKey="seeBundleItems"/>
    </test>
</tests>
