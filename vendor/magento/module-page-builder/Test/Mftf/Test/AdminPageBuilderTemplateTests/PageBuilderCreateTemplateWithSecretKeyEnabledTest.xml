<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="PageBuilderCreateTemplateWithSecretKeyEnabledTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Templates"/>
            <title value="Verify Page Builder Template Screenshot with Secret Key URLs Enabled"/>
            <description value="Verify that users are able to create Page Builder templates with working screenshots
            when 'Add Secret Key to URLs' is enabled. Also, disabling secret keys does not affect created screenshots."/>
            <severity value="CRITICAL"/>
            <testCaseId value="PB-1088"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-templates"/>
            <group value="secret-key-urls"/>
        </annotations>

        <before>
            <!-- Create CMS Page & Login -->
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>

            <!-- Enable 'Add Secret Key to URLs' -->
            <magentoCLI command="config:set admin/security/use_form_key 1" stepKey="enableSecretKeyUrls"/>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanInvalidatedCaches">
                <argument name="tags" value="config full_page"/>
            </actionGroup>
            <actionGroup ref="ReloadPageActionGroup" stepKey="reloadPage"/>

            <!-- Navigate to CMS Page -->
            <actionGroup ref="AdminNavigateMenuActionGroup" stepKey="navigateToCMSPagesGrid">
                <argument name="menuUiId" value="{{AdminMenuContent.dataUiId}}"/>
                <argument name="submenuUiId" value="{{AdminMenuContentElementsPages.dataUiId}}"/>
            </actionGroup>
            <actionGroup ref="AdminNavigateToCreatedCMSPageWithEnabledSecretKeyActionGroup" stepKey="navigateToCreatedCMSPage">
                <argument name="CMSPage" value="$$createCMSPage$$"/>
            </actionGroup>

            <!-- Add Row to Stage -->
            <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
            <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditMenuOnStage">
                <argument name="contentType" value="PageBuilderRowContentType"/>
            </actionGroup>
            <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
                <argument name="property" value="PageBuilderBackgroundColor_Plaintext_Green"/>
            </actionGroup>
            <actionGroup ref="saveEditPanelSettingsFullScreen" stepKey="saveEditPanelSettings"/>
        </before>

        <after>
            <!-- Revert Configurations & Delete Data -->
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <magentoCLI command="config:set admin/security/use_form_key 0" stepKey="disableSecretKeyUrls"/>
            <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanInvalidatedCaches">
                <argument name="tags" value="config full_page"/>
            </actionGroup>
            <actionGroup ref="ReloadPageActionGroup" stepKey="reloadPage"/>
            <magentoCLI command="config:set admin/security/use_form_key 0" stepKey="disableUrlSecretKeys"/>
            <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage3"/>
            <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid5"/>
            <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid5"/>
            <actionGroup ref="deletePageBuilderTemplate" stepKey="deletePageBuilderTemplate"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>

        <!-- Create and Save Template -->
        <actionGroup ref="openPageBuilderSaveTemplateModal" stepKey="openPageBuilderSaveTemplateModal"/>
        <actionGroup ref="fillPageBuilderSaveTemplateForm" stepKey="fillPageBuilderSaveTemplateForm">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="savePageBuilderTemplate" stepKey="savePageBuilderTemplate"/>

        <!-- Open Apply Template -->
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>

        <!-- Validate Template in Apply Template Slide Out -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderApplyTemplateSlideOut" stepKey="closePageBuilderApplyTemplateSlideOut"/>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>

        <!-- Navigate to Templates Grid Page -->
        <actionGroup ref="AdminNavigateMenuActionGroup" stepKey="navigateToTemplatesGridPage">
            <argument name="menuUiId" value="{{AdminMenuContent.dataUiId}}"/>
            <argument name="submenuUiId" value="{{AdminMenuContentElementsTemplates.dataUiId}}"/>
        </actionGroup>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid2"/>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid2">
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>

        <!-- Validate Templates Grid Page -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal2">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal2">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal2"/>

        <!-- Disable 'Add Secret Key to URLs' -->
        <magentoCLI command="config:set admin/security/use_form_key 0" stepKey="disableSecretKeyUrls"/>
        <actionGroup ref="CliCacheCleanActionGroup" stepKey="cleanInvalidatedCaches2">
            <argument name="tags" value="config full_page"/>
        </actionGroup>
        <actionGroup ref="ReloadPageActionGroup" stepKey="reloadPage2"/>

        <!-- Navigate to CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>

        <!-- Open Apply Template -->
        <actionGroup ref="openPageBuilderApplyTemplateSlideOut" stepKey="openPageBuilderApplyTemplateSlideOut2"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid3">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid3">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>

        <!-- Validate Template in Apply Template Slide Out -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal3">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal3">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal3">
            <argument name="section" value="PageBuilderApplyTemplatesGrid"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderApplyTemplateSlideOut" stepKey="closePageBuilderApplyTemplateSlideOut2"/>

        <!-- Navigate to Templates Grid Page -->
        <actionGroup ref="navigateToPageBuilderTemplatesGridPage" stepKey="navigateToPageBuilderTemplatesGridPage2"/>
        <actionGroup ref="clearFiltersPageBuilderTemplateGrid" stepKey="clearFiltersPageBuilderTemplateGrid4"/>
        <actionGroup ref="searchByKeywordPageBuilderTemplateGrid" stepKey="searchByKeywordPageBuilderTemplateGrid4">
            <argument name="keyword" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>

        <!-- Validate Templates Grid Page -->
        <actionGroup ref="openPageBuilderTemplatePreviewImageModal" stepKey="openPageBuilderTemplatePreviewImageModal4">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="validatePageBuilderTemplatePreviewImageModal" stepKey="validatePageBuilderTemplatePreviewImageModal4">
            <argument name="templateName" value="{{PageBuilderTemplateNameRandom.name}}"/>
        </actionGroup>
        <actionGroup ref="closePageBuilderTemplatePreviewImageModal" stepKey="closePageBuilderTemplatePreviewImageModal4"/>
    </test>
</tests>
