<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="BlockRenderContainedRowMinHeightThroughBlockContentTypeTest">
        <annotations>
            <features value="PageBuilder"/>
            <stories value="Block Content"/>
            <title value="Validate Contained Row Min Height Through Block Content Type"/>
            <description value="Verify that a contained row's minimum height attribute renders correctly through the Block content type."/>
            <severity value="BLOCKER"/>
            <useCaseId value="PB-277"/>
            <testCaseId value="MC-31410"/>
            <group value="pagebuilder"/>
            <group value="pagebuilder-block"/>
            <group value="pagebuilder-block-content"/>
            <group value="pagebuilder-row"/>
            <group value="pagebuilder-row-contained"/>
        </annotations>
        <before>
            <actionGroup ref="AdminLoginActionGroup" stepKey="loginAsAdmin"/>
            <createData entity="_emptyCmsPage" stepKey="createCMSPage"/>
            <createData entity="_emptyCmsBlock" stepKey="createCMSBlock"/>
            <actionGroup ref="NavigateToCreatedCMSBlockPageActionGroup" stepKey="navigateToCreatedCMSBlockPage1">
                <argument name="CMSBlockPage" value="$$createCMSBlock$$"/>
            </actionGroup>
            <actionGroup ref="AdminOpenPageBuilderFromContentPreviewOverlayActionGroup" stepKey="openPageBuilderFullScreen"/>
            <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
                <argument name="contentType" value="PageBuilderRowContentType"/>
                <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCMSBlock" stepKey="deleteCMSBlock"/>
            <deleteData createDataKey="createCMSPage" stepKey="deleteCMSPage"/>
            <actionGroup ref="AdminLogoutActionGroup" stepKey="logout"/>
        </after>
        <!-- Row 1: Min Height = 200px -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="index" value="1"/>
        </actionGroup>
        <actionGroup ref="chooseVisualSelectOption" stepKey="selectAppearance">
            <argument name="property" value="PageBuilderRowAppearance_Contained"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeight200px">
            <argument name="property" value="PageBuilderMinHeightProperty_200px"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterBackgroundColor">
            <argument name="property" value="PageBuilderBackgroundColor_Red"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldPadding" stepKey="enterPadding">
            <argument name="property" value="PageBuilderPaddingProperty0"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings"/>
        <actionGroup ref="duplicateContentType" stepKey="duplicateContentType1">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <actionGroup ref="duplicateContentType" stepKey="duplicateContentType2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="targetIndex" value="1"/>
        </actionGroup>
        <!-- Row 2: Min Height = 100vh -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel2">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="2"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeight100vh">
            <argument name="property" value="PageBuilderMinHeightProperty_100vh"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings2"/>
        <!-- Row 3: Min Height = 100vh - 200px -->
        <actionGroup ref="openPageBuilderEditPanelByIndex" stepKey="openEditPanel3">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="contentTypeIndex" value="3"/>
        </actionGroup>
        <actionGroup ref="fillSlideOutPanelFieldGeneral" stepKey="enterMinHeightCalculation">
            <argument name="property" value="PageBuilderMinHeightProperty_100vh_Minus_200px"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettings3"/>
        <!-- Validate CMS Block Stage -->
        <executeJS function="return window.innerHeight;" stepKey="viewportHeightCMSBlockStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightCMSBlockStage">
            <argument name="selector" value="{{RowOnStage.base('1')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_200px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStage.base('1')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstMinHeightCMSBlockStage"/>
        <assertEquals stepKey="assertFirstMinHeightCMSBlockStage">
            <actualResult type="variable">firstMinHeightCMSBlockStage</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_200px.intValue}}</expectedResult>
        </assertEquals>
        <comment userInput="BIC workaround" stepKey="seeSecondMinHeightCMSBlockStage"/>
        <executeJS function="return document.evaluate('{{RowOnStage.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondMinHeightCMSBlockStage"/>
        <assertEquals stepKey="assertSecondMinHeightCMSBlockStage">
            <actualResult type="variable">secondMinHeightCMSBlockStage</actualResult>
            <expectedResult type="variable">viewportHeightCMSBlockStage</expectedResult>
        </assertEquals>
        <comment userInput="BIC workaround" stepKey="seeThirdMinHeightCMSBlockStage"/>
        <executeJS function="return document.evaluate('{{RowOnStage.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdMinHeightCMSBlockStage"/>
        <executeJS function="return Math.abs({$viewportHeightCMSBlockStage} - 200)" stepKey="expectedThirdHeightCMSBlockStage"/>
        <assertEquals stepKey="assertThirdMinHeightCMSBlockStage">
            <actualResult type="variable">thirdMinHeightCMSBlockStage</actualResult>
            <expectedResult type="variable">expectedThirdHeightCMSBlockStage</expectedResult>
        </assertEquals>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreenBeforeSave"/>
        <actionGroup ref="SaveCMSBlockActionGroup" stepKey="saveCMSBlock"/>
        <!-- Add Block to CMS Page -->
        <actionGroup ref="NavigateToCreatedCMSPageActionGroup" stepKey="navigateToCreatedCMSPage">
            <argument name="CMSPage" value="$$createCMSPage$$"/>
        </actionGroup>
        <actionGroup ref="switchToPageBuilderStage" stepKey="switchToPageBuilderStage"/>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragRowToRootContainer">
            <argument name="contentType" value="PageBuilderRowContentType"/>
            <argument name="containerTargetType" value="PageBuilderRootContainerContentType"/>
        </actionGroup>
        <actionGroup ref="expandPageBuilderPanelMenuSection" stepKey="expandPanelAddContentMenuSection">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="dragContentTypeToStage" stepKey="dragBlockIntoStage">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="openPageBuilderEditPanel" stepKey="openEditAfterDropBlock">
            <argument name="contentType" value="PageBuilderBlockContentType"/>
        </actionGroup>
        <actionGroup ref="searchBlockInGrid" stepKey="searchBlockInGrid">
            <argument name="block" value="$$createCMSBlock$$"/>
        </actionGroup>
        <actionGroup ref="saveEditPanelSettings" stepKey="saveEditPanelSettingsBlock"/>
        <!-- Validate CMS Page Stage -->
        <executeJS function="return window.innerHeight;" stepKey="viewportHeightCMSPageStage"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightCMSPageStage">
            <argument name="selector" value="{{RowOnStorefront.base('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_200px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstMinHeightCMSPageStage"/>
        <assertEquals stepKey="assertFirstMinHeightCMSPageStage">
            <actualResult type="variable">firstMinHeightCMSPageStage</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_200px.intValue}}</expectedResult>
        </assertEquals>
        <comment userInput="BIC workaround" stepKey="seeSecondMinHeightCMSPageStage"/>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondMinHeightCMSPageStage"/>
        <assertEquals stepKey="assertSecondMinHeightCMSPageStage">
            <actualResult type="variable">secondMinHeightCMSPageStage</actualResult>
            <expectedResult type="variable">viewportHeightCMSPageStage</expectedResult>
        </assertEquals>
        <comment userInput="BIC workaround" stepKey="seeThirdMinHeightCMSPageStage"/>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('4')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdMinHeightCMSPageStage"/>
        <executeJS function="return Math.abs({$viewportHeightCMSPageStage} - 200)" stepKey="expectedThirdHeightCMSPageStage"/>
        <assertEquals stepKey="assertThirdMinHeightCMSPageStage">
            <actualResult type="variable">thirdMinHeightCMSPageStage</actualResult>
            <expectedResult type="variable">expectedThirdHeightCMSPageStage</expectedResult>
        </assertEquals>
        <actionGroup ref="exitPageBuilderFullScreen" stepKey="exitPageBuilderFullScreen"/>
        <actionGroup ref="SaveAndContinueEditCmsPageActionGroup" stepKey="saveAndContinueEditCmsPage"/>
        <!-- Validate Storefront -->
        <actionGroup ref="NavigateToStorefrontForCreatedPageActionGroup" stepKey="navigateToCMSPageStorefront">
            <argument name="page" value="$$createCMSPage.identifier$$"/>
        </actionGroup>
        <executeJS function="return window.innerHeight;" stepKey="viewportHeightStorefront"/>
        <actionGroup ref="ValidateContentTypesStyleEqualsExpectedStyleActionGroup" stepKey="seeFirstMinHeightStorefront">
            <argument name="selector" value="{{RowOnStorefront.base('2')}}"/>
            <argument name="expectedProperty" value="{{PageBuilderMinHeightProperty_200px.intValue}}"/>
            <argument name="cssProperty" value="minHeight"/>
        </actionGroup>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('2')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="firstMinHeightStorefront"/>
        <assertEquals stepKey="assertFirstMinHeightStorefront">
            <actualResult type="variable">firstMinHeightStorefront</actualResult>
            <expectedResult type="string">{{PageBuilderMinHeightProperty_200px.intValue}}</expectedResult>
        </assertEquals>
        <comment userInput="BIC workaround" stepKey="seeSecondMinHeightStorefront"/>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('3')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="secondMinHeightStorefront"/>
        <assertEquals stepKey="assertSecondMinHeightStorefront">
            <actualResult type="variable">secondMinHeightStorefront</actualResult>
            <expectedResult type="variable">viewportHeightStorefront</expectedResult>
        </assertEquals>
        <comment userInput="BIC workaround" stepKey="seeThirdMinHeightStorefront"/>
        <executeJS function="return document.evaluate('{{RowOnStorefront.base('4')}}', document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue.getBoundingClientRect().height" stepKey="thirdMinHeightStorefront"/>
        <executeJS function="return Math.abs({$viewportHeightStorefront} - 200)" stepKey="expectedThirdHeightStorefront"/>
        <assertEquals stepKey="assertThirdMinHeightStorefront">
            <actualResult type="variable">thirdMinHeightStorefront</actualResult>
            <expectedResult type="variable">expectedThirdHeightStorefront</expectedResult>
        </assertEquals>
    </test>
</tests>
