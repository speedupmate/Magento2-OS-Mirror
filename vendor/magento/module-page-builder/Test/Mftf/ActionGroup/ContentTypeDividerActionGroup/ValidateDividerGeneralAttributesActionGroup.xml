<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <actionGroup name="ValidateDividerGeneralAttributesActionGroup">
        <annotations>
            <description>Validate Divider General Attributes</description>
        </annotations>
        <arguments>
            <argument name="page" defaultValue=""/>
            <argument name="index" defaultValue="1" type="string"/>
            <argument name="lineColor" defaultValue="PageBuilderDividerLineColor_Default"/>
            <argument name="lineThickness" defaultValue="PageBuilderDividerLineThickness_Default"/>
            <argument name="lineWidth" defaultValue="PageBuilderDividerLineWidth_Default"/>
        </arguments>
        <waitForElementVisible selector="{{page.base(index)}}" stepKey="waitForElementVisible"/>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.lineElement(index)}}', document.body).iterateNext()).borderTopColor" stepKey="grabColorValue"/>
        <assertEquals stepKey="assertColorValue">
            <expectedResult type="string">{{lineColor.rgb}}</expectedResult>
            <actualResult type="variable">grabColorValue</actualResult>
        </assertEquals>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.lineElement(index)}}', document.body).iterateNext()).borderTopWidth" stepKey="grabBorderWidthValue"/>
        <assertEquals stepKey="assertThicknessValue">
            <expectedResult type="string">{{lineThickness.value}}px</expectedResult>
            <actualResult type="variable">grabBorderWidthValue</actualResult>
        </assertEquals>
        <executeJS function="return document.evaluate('{{page.lineWrapper(index)}}', document.body).iterateNext().clientWidth" stepKey="grabDividerLineWrapperWidth"/>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.lineWrapper(index)}}', document.body).iterateNext()).paddingLeft.replace(&quot;px&quot;, &quot;&quot;)" stepKey="grabDividerLineWrapperPaddingLeft"/>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.lineWrapper(index)}}', document.body).iterateNext()).paddingRight.replace(&quot;px&quot;, &quot;&quot;)" stepKey="grabDividerLineWrapperPaddingRight"/>
        <executeJS function="return (('{$grabDividerLineWrapperWidth}'- '{$grabDividerLineWrapperPaddingLeft}' - '{$grabDividerLineWrapperPaddingRight}') * {{lineWidth.decimalValue}}) + 'px'" stepKey="grabCalculatedWidthValue"/>
        <executeJS function="return window.getComputedStyle(document.evaluate('{{page.lineElement(index)}}', document.body).iterateNext()).width" stepKey="grabWidthValue"/>
        <assertEquals stepKey="assertWidthValue">
            <expectedResult type="variable">grabCalculatedWidthValue</expectedResult>
            <actualResult type="variable">grabWidthValue</actualResult>
        </assertEquals>
    </actionGroup>
</actionGroups>
