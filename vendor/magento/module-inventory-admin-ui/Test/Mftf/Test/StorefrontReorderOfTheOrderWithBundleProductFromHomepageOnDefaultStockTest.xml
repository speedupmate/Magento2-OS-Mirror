<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontReorderOfTheOrderWithBundleProductFromHomepageOnDefaultStockTest">
        <annotations>
            <stories value="Bundle Product Default Stock."/>
            <title value="Re-order button for bundle product on default stock."/>
            <description value="Reorder of the Order with Bundle product from Homepage on Default stock."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735206/scenarios/1677047"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <!--Create test data.-->
            <createData entity="MsiCustomer1" stepKey="customer"/>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="FullSource1" stepKey="additionalSource"/>
            <createData entity="BasicMsiStock1" stepKey="additionalStock"/>
            <!--Assign source to stock.-->
            <createData entity="SourceStockLinked1" stepKey="linkSourceStock">
                <requiredEntity createDataKey="additionalStock"/>
                <requiredEntity createDataKey="additionalSource"/>
            </createData>
            <!--Create  simple products-->
            <createData entity="SimpleProduct2" stepKey="simpleProduct1">
                <field key="quantity">2</field>
            </createData>
            <createData entity="SimpleProduct2" stepKey="simpleProduct2">
                <field key="quantity">2</field>
            </createData>
            <!--Create Bundle product-->
            <createData entity="BundleProductPriceViewRange" stepKey="createBundleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
            <createData entity="DropDownBundleOption" stepKey="createBundleOption1_1">
                <requiredEntity createDataKey="createBundleProduct"/>
                <field key="required">True</field>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_1"/>
                <requiredEntity createDataKey="simpleProduct1"/>
                <field key="qty">2</field>
                <field key="is_default">1</field>
            </createData>
            <createData entity="ApiBundleLink" stepKey="linkOptionToProduct2">
                <requiredEntity createDataKey="createBundleProduct"/>
                <requiredEntity createDataKey="createBundleOption1_1"/>
                <requiredEntity createDataKey="simpleProduct2"/>
                <field key="qty">2</field>
            </createData>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
        </before>
        <after>
            <!--Disable additional source.-->
            <actionGroup ref="DisableSourceActionGroup" stepKey="disableAdditionalSource">
                <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
            </actionGroup>
            <actionGroup ref="logout" stepKey="logoutOfAdmin"/>
            <!--Clean up created data.-->
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="simpleProduct1" stepKey="simpleProduct1"/>
            <deleteData createDataKey="simpleProduct2" stepKey="simpleProduct2"/>
        </after>

        <actionGroup ref="AdminGoToProductGridFilterResultsByInputEditProduct" stepKey="goToProductGridFilterResultsByInputEditProduct1">
            <argument name="filter_selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="filter_value" value="$$simpleProduct1.product[sku]$$"/>
        </actionGroup>

        <actionGroup ref="AdminFillSourceQtyOnProductEditPageActionGroup" stepKey="fillProductQtyPerSource">
            <argument name="sourceCode" value="_defaultSource.source_code"/>
            <argument name="qty" value="20" />
        </actionGroup>

        <actionGroup ref="saveProductForm" stepKey="saveProduct"/>

        <actionGroup ref="AdminGoToProductGridFilterResultsByInputEditProduct" stepKey="goToProductGridFilterResultsByInputEditProduct2">
            <argument name="filter_selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="filter_value" value="$$simpleProduct2.product[sku]$$"/>
        </actionGroup>

        <actionGroup ref="AdminFillSourceQtyOnProductEditPageActionGroup" stepKey="fillProductQtyPerSource2">
            <argument name="sourceCode" value="_defaultSource.source_code"/>
            <argument name="qty" value="20" />
        </actionGroup>

        <actionGroup ref="saveProductForm" stepKey="saveProduct2"/>

        <actionGroup ref="LoginToStorefrontActionGroup" stepKey="loginToStorefront">
            <argument name="Customer" value="$$customer$$"/>
        </actionGroup>

        <!-- Perform reindex and flush cache -->
        <magentoCLI command="indexer:reindex" stepKey="reindex"/>
        <magentoCLI command="cache:flush" stepKey="flushCache"/>

        <amOnPage url="{{StorefrontProductPage.url($createBundleProduct.custom_attributes[url_key]$)}}" stepKey="navigateToBundleProductPage"/>
        <actionGroup ref="StorefrontAddBundleProductFromProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="productName" value="$$createBundleProduct.name$$"/>
        </actionGroup>

        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicart"/>
        <click selector="{{CheckoutShippingSection.next}}" stepKey="clickNext"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskAfterClickNext"/>
        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectPaymentMethod"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="checkoutPlaceOrder"/>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber22}}" stepKey="orderNumber"/>

        <amOnPage url="{{StorefrontCustomerDashboardPage.url}}" stepKey="goToCustomerDashboardPage"/>
        <waitForPageLoad stepKey="waitForCustomerDashboardPageLoad"/>
        <actionGroup ref="StorefrontCustomerGoToSidebarMenu" stepKey="goToMyOrdersPage">
            <argument name="menu" value="My Orders"/>
        </actionGroup>

        <click selector="//td[text()='{$orderNumber}']/following-sibling::td[@class='col actions']/a[contains(@class, 'order')]" stepKey="clickReorderBtn"/>
        <waitForPageLoad stepKey="waitForCartPageLoad"/>
        <click selector="{{CheckoutCartSummarySection.proceedToCheckout}}" stepKey="goToCheckout"/>
        <waitForPageLoad stepKey="waitForPageLoadCheckoutSelectPaymentToReorder"/>
        <click selector="{{CheckoutShippingSection.next}}" stepKey="clickNext2"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskAfterClickNext2"/>

        <actionGroup ref="CheckoutSelectCheckMoneyOrderPaymentActionGroup" stepKey="selectPaymentMethod2"/>
        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="checkoutPlaceOrder2"/>
        <waitForPageLoad stepKey="waitUntilOrderPlacedToReorder2"/>
        <see selector="{{CheckoutSuccessMainSection.success}}" userInput="Your order number is:" stepKey="checkOrderPlaceSuccessMessageAfterReorder"/>
    </test>
</tests>
