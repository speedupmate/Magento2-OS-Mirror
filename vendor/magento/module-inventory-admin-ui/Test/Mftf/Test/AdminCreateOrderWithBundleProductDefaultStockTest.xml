<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCreateOrderWithBundleProductDefaultStockTest">
        <annotations>
            <stories value="Create order with bundle product on default stock from admin area."/>
            <title value="Create order with bundle product on default stock from admin area"/>
            <description value="Check, admin user able to create order with bundle product on default stock from admin area."/>
            <testCaseId value="MSI-1332"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
        </annotations>

        <before>
            <createData entity="FullSource1" stepKey="customSource"/>
            <createData entity="BasicMsiStock1" stepKey="customStock"/>
            <createData entity="SourceStockLinked1" stepKey="stockSourceLink">
                <requiredEntity createDataKey="customStock"/>
                <requiredEntity createDataKey="customSource"/>
            </createData>
            <createData entity="SimpleSubCategory" stepKey="category"/>
            <createData entity="Msi_US_Customer" stepKey="customer"/>

            <actionGroup ref="LoginAsAdmin" stepKey="loginToAdminArea"/>
            <waitForPageLoad stepKey="waitForDashboardLoad"/>

            <comment userInput="Assign Default Stock to Main Website " stepKey="assignDefaultStockToMainWebsiteComment"/>
            <amOnPage url="{{AdminManageStockPage.url}}" stepKey="navigateToStockListPage"/>
            <waitForPageLoad time="30" stepKey="waitForStockListPageLoad"/>
            <actionGroup ref="searchAdminDataGridByKeyword" stepKey="searchDefaultStockByName">
                <argument name="keyword" value="_defaultStock.name"/>
            </actionGroup>
            <click selector="{{AdminGridRow.editByValue(_defaultStock.name)}}" stepKey="clickEditDefaultStock"/>
            <waitForPageLoad time="30" stepKey="waitFroDefaultStockEditPageLoad"/>
            <selectOption selector="{{AdminEditStockSalesChannelsSection.websites}}" userInput="Main Website" stepKey="selectDefaultWebsiteAsSalesChannelForDefaultStock"/>
            <click selector="{{AdminGridMainControls.saveAndContinue}}" stepKey="saveDefaultStock"/>

            <comment userInput="Perform reindex and cache flush after assign default stock to main website." stepKey="reindexCacheFlushAfterAssignDefaultStockToMainWebsite"/>
            <magentoCLI command="indexer:reindex" stepKey="performReindex"/>
            <magentoCLI command="cache:flush" stepKey="cleanCache"/>

            <createData entity="SimpleProduct" stepKey="simpleProduct">
                <requiredEntity createDataKey="category"/>
            </createData>
        </before>
        <after>
            <deleteData createDataKey="category" stepKey="deleteCategory"/>
            <deleteData createDataKey="customer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="customStock" stepKey="deleteCustomStock"/>
            <deleteData createDataKey="simpleProduct" stepKey="deleteSimpleProduct"/>

            <actionGroup ref="logout" stepKey="logoutFromAdminArea"/>
        </after>

        <comment userInput="Create bundle product." stepKey="createBundleProductComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="visitAdminProductPageBundle"/>
        <waitForPageLoad stepKey="waitForProductPageLoadBundle"/>
        <actionGroup ref="goToCreateProductPage" stepKey="goToCreateBundleProduct">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>
        <actionGroup ref="fillProductNameAndSkuInProductForm" stepKey="fillBundleProductNameAndSku">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>

        <comment userInput="Add bundle item." stepKey="addBundleItemComment"/>
        <conditionalClick selector="{{AdminProductFormBundleSection.bundleItemsToggle}}" dependentSelector="{{AdminProductFormBundleSection.bundleItemsToggle}}" visible="false" stepKey="conditionallyOpenSectionBundleItems"/>
        <click selector="{{AdminProductFormBundleSection.addOption}}" stepKey="clickAddOption"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" stepKey="waitForBundleOptions"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXTitle('0')}}" userInput="{{BundleProduct.optionTitle1}}" stepKey="fillOptionTitle"/>
        <selectOption selector="{{AdminProductFormBundleSection.bundleOptionXInputType('0')}}" userInput="{{BundleProduct.optionInputType1}}" stepKey="selectInputType"/>
        <waitForElementVisible selector="{{AdminProductFormBundleSection.addProductsToOption}}" stepKey="waitForAddProductsToBundle"/>
        <click selector="{{AdminProductFormBundleSection.addProductsToOption}}" stepKey="clickAddProductsToOption"/>
        <waitForPageLoad stepKey="waitForPageLoadAfterBundleProducts"/>
        <actionGroup ref="filterProductGridBySku" stepKey="filterBundleProductOptions">
            <argument name="product" value="$$simpleProduct$$"/>
        </actionGroup>
        <checkOption selector="{{AdminAddProductsToOptionPanel.firstCheckbox}}" stepKey="selectFirstGridRow"/>
        <click selector="{{AdminAddProductsToOptionPanel.addSelectedProducts}}" stepKey="clickAddSelectedBundleProducts"/>
        <fillField selector="{{AdminProductFormBundleSection.bundleOptionXProductYQuantity('0', '0')}}" userInput="5" stepKey="fillProductDefaultQty"/>
        <actionGroup ref="AdminFormSaveAndClose" stepKey="saveAndCloseCreatedBundleProduct"/>

        <comment userInput="Create order with bundle product from admin area." stepKey="createOrderWithBundleProductComment"/>
        <actionGroup ref="navigateToNewOrderPageExistingCustomer" stepKey="createNewOrderForCustomer">
            <argument name="customer" value="$$customer$$"/>
        </actionGroup>

        <conditionalClick selector="#store_1" dependentSelector="#order-store-selector" visible="true" stepKey="clickOnDefaultStoreViewIfPresent1"/>
        <waitForPageLoad time="60" stepKey="waitForPageLoad20"/>

        <actionGroup ref="addBundleProductToOrder" stepKey="addBundleProductToOrder">
            <argument name="product" value="BundleProduct"/>
        </actionGroup>

        <waitForPageLoad time="60" stepKey="waitForPageLoad21"/>

        <comment userInput="Select shipping method and check grand total and shipping cost." stepKey="selectShippingMethodComment"/>
        <actionGroup ref="orderSelectFlatRateShipping" stepKey="selectFlatRateShipping"/>
        <see selector="{{AdminOrderFormTotalSection.total('Subtotal')}}" userInput="$615.00" stepKey="seeOrderSubTotal"/>
        <see selector="{{AdminOrderFormTotalSection.total('Shipping')}}" userInput="$5.00" stepKey="seeOrderShipping"/>
        <see selector="{{AdminOrderFormTotalSection.grandTotal}}" userInput="$620.00" stepKey="seeCorrectGrandTotal"/>

        <comment userInput="Submit order." stepKey="submitOrderComment"/>
        <click selector="{{AdminOrderFormActionSection.SubmitOrder}}" stepKey="clickSubmitOrder"/>
        <seeInCurrentUrl url="{{AdminOrderDetailsPage.url}}" stepKey="seeViewOrderPage"/>

        <comment userInput="Check simple product quantity and salable quantity." stepKey="checkSimpleProductQuantityComment"/>
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductIndexPageForCheckSimpleProductQtyAfterPlaceOrder"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findSimpleProductBySkuToCheckQtyAfterPlaceOrder">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1',_defaultSource.name)}}" userInput="1000" stepKey="checkSimpleProductSourceQtyAfterPlaceOrder"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1',_defaultStock.name)}}" userInput="995" stepKey="checkSimpleProductSalableQtyAfterPlaceOrder"/>
    </test>
</tests>
