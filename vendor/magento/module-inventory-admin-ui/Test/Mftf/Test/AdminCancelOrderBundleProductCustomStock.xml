<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="AdminCancelOrderBundleProductCustomStock" extends="AdminCreateOrderWithBundleProductDefaultStockTest">
        <annotations>
            <stories value="Bundle Product Custom Stock."/>
            <title value="Cancel order with bundle product on Custom stock."/>
            <description value="Verify admin able to cancel order with bundle product on custom stock from admin area."/>
            <testCaseId value="https://app.hiptest.com/projects/69435/test-plan/folders/735226/scenarios/1446966"/>
            <severity value="CRITICAL"/>
            <group value="msi"/>
            <group value="multi_mode"/>
            <skip>
                <issueId value="https://github.com/magento/inventory/issues/522"/>
            </skip>
        </annotations>

        <before>
            <remove keyForRemoval="assignMainWebsiteToDefaultStock"/>
            <remove keyForRemoval="customStock"/>
            <createData entity="BasicMsiStockWithMainWebsite1" stepKey="customStock"/>
        </before>
        <after>
            <!--Assign Default Stock to Default Website.-->
            <actionGroup ref="AssignWebsiteToStockActionGroup" stepKey="assignMainWebsiteToDefaultStock" after="disableCreatedCustomSource">
                <argument name="stockName" value="{{_defaultStock.name}}"/>
                <argument name="websiteName" value="{{_defaultWebsite.name}}"/>
            </actionGroup>
        </after>

        <!--Assign additional source to simple product.-->
        <amOnPage url="{{AdminProductEditPage.url($$simpleProduct.id$$)}}" stepKey="openProductEditPageToAssignSource" before="assignSourceToProduct"/>
        <actionGroup ref="AssignSourceToProductActionGroup" stepKey="assignSourceToProduct" before="setProductQuantity">
            <argument name="sourceCode" value="$$additionalSource.source[source_code]$$"/>
        </actionGroup>
        <fillField selector="{{AdminProductSourcesGrid.rowQty('1')}}" userInput="1000" stepKey="setProductQuantity" before="saveSimpleProduct"/>
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveSimpleProduct" before="waitForProductSave"/>
        <waitForPageLoad stepKey="waitForProductSave" before="visitAdminProductPageBundle"/>
        <!--Get order Id.-->
        <grabTextFrom selector="|Order # (\d+)|" stepKey="orderId" after="clickSubmitOrder" />
        <!--Cancel order.-->
        <actionGroup ref="OpenOrderById" stepKey="openOrder" after="checkSimpleProductSalableQtyAfterPlaceOrder">
            <argument name="orderId" value="{$orderId}"/>
        </actionGroup>
        <click selector="{{AdminOrderDetailsMainActionsSection.cancel}}" stepKey="clickCancelOrder"/>
        <waitForElement selector="{{AdminConfirmationModalSection.message}}" stepKey="waitForCancelConfirmation"/>
        <see selector="{{AdminConfirmationModalSection.message}}" userInput="Are you sure you want to cancel this order?" stepKey="seeConfirmationMessage"/>
        <click selector="{{AdminConfirmationModalSection.ok}}" stepKey="confirmOrderCancel"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="You canceled the order." stepKey="seeCancelSuccessMessage"/>
        <!--Verify product quantity after order cancellation.-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="navigateToProductGrid"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="findProduct">
            <argument name="selector" value="AdminProductGridFilterSection.skuFilter"/>
            <argument name="value" value="$$simpleProduct.sku$$"/>
        </actionGroup>
        <see selector="{{AdminProductGridSection.productQtyPerSource('1', $$customSource.source[name]$$)}}" userInput="1000" stepKey="verifySourceQuantity"/>
        <see selector="{{AdminProductGridSection.productSalableQty('1', $$customStock.stock[name]$$)}}" userInput="1000" stepKey="verifyStockQuantity"/>
    </test>
</tests>
