<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<actionGroups xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/actionGroupSchema.xsd">
    <!--Cancel order that is in pending status-->
    <actionGroup name="cancelPendingOrder">
        <click selector="{{AdminOrderDetailsMainActionsSection.cancel}}" stepKey="clickCancelOrder"/>
        <waitForElement selector="{{AdminConfirmationModalSection.message}}" stepKey="waitForCancelConfirmation"/>
        <see selector="{{AdminConfirmationModalSection.message}}" userInput="Are you sure you want to cancel this order?" stepKey="seeConfirmationMessage"/>
        <click selector="{{AdminConfirmationModalSection.ok}}" stepKey="confirmOrderCancel"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="You canceled the order." stepKey="seeCancelSuccessMessage"/>
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Canceled" stepKey="seeOrderStatusCanceled"/>
    </actionGroup>

    <!--Cancel order that is in processing status-->
    <actionGroup name="CancelProcessingOrder" extends="cancelPendingOrder">
        <remove keyForRemoval="seeOrderStatusCanceled"/>
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" after="seeCancelSuccessMessage" userInput="{{CONST.orderStatusComplete}}" stepKey="seeOrderStatusComplete"/>
    </actionGroup>

    <!--Navigate to create order page (New Order -> Create New Customer)-->
    <actionGroup name="navigateToNewOrderPageNewCustomerSingleStore">
        <arguments>
            <argument name="storeView" defaultValue="_defaultStore"/>
        </arguments>
        <amOnPage url="{{AdminOrdersPage.url}}" stepKey="navigateToOrderIndexPage"/>
        <waitForPageLoad stepKey="waitForIndexPageLoad"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="Orders" stepKey="seeIndexPageTitle"/>
        <click selector="{{OrdersGridSection.createNewOrder}}" stepKey="clickCreateNewOrder"/>
        <click selector="{{AdminOrderFormActionSection.createNewCustomer}}" stepKey="clickCreateCustomer"/>
        <conditionalClick selector="{{AdminOrderStoreScopeTreeSection.storeOption(storeView.name)}}" dependentSelector="{{AdminOrderStoreScopeTreeSection.storeOption(storeView.name)}}" visible="true" stepKey="selectStoreViewIfAppears"/>
        <waitForPageLoad stepKey="waitForCreateOrderPageLoadAfterStoreSelect"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="Create New Order" stepKey="seeNewOrderPageTitle"/>
    </actionGroup>

    <!--Check the required fields are actually required-->
    <actionGroup name="checkRequiredFieldsNewOrderForm">
        <seeElement selector="{{AdminOrderFormAccountSection.requiredGroup}}" stepKey="seeCustomerGroupRequired"/>
        <seeElement selector="{{AdminOrderFormAccountSection.requiredEmail}}" stepKey="seeEmailRequired"/>
        <clearField selector="{{AdminOrderFormAccountSection.email}}" stepKey="clearEmailField"/>
        <clearField selector="{{AdminOrderFormBillingAddressSection.firstName}}" stepKey="clearFirstNameField"/>
        <clearField selector="{{AdminOrderFormBillingAddressSection.lastName}}" stepKey="clearLastNameField"/>
        <clearField selector="{{AdminOrderFormBillingAddressSection.streetLine1}}" stepKey="clearStreetField"/>
        <clearField selector="{{AdminOrderFormBillingAddressSection.city}}" stepKey="clearCityField"/>
        <selectOption selector="{{AdminOrderFormBillingAddressSection.country}}" userInput="United States" stepKey="selectUSCountry"/>
        <selectOption selector="{{AdminOrderFormBillingAddressSection.state}}" userInput="Please select" stepKey="selectNoState"/>
        <clearField selector="{{AdminOrderFormBillingAddressSection.postalCode}}" stepKey="clearPostalCodeField"/>
        <clearField selector="{{AdminOrderFormBillingAddressSection.phone}}" stepKey="clearPhoneField"/>
        <seeElement selector="{{AdminOrderFormPaymentSection.getShippingMethods}}" stepKey="seeShippingMethodNotSelected"/>
        <click selector="{{AdminOrderFormActionSection.submitOrder}}" stepKey="trySubmitOrder"/>
        <see selector="{{AdminOrderFormBillingAddressSection.emailError}}" userInput="This is a required field." stepKey="seeThatEmailIsRequired"/>
        <see selector="{{AdminOrderFormBillingAddressSection.firstNameError}}" userInput="This is a required field." stepKey="seeFirstNameRequired"/>
        <see selector="{{AdminOrderFormBillingAddressSection.lastNameError}}" userInput="This is a required field." stepKey="seeLastNameRequired"/>
        <see selector="{{AdminOrderFormBillingAddressSection.streetAddressError}}" userInput="This is a required field." stepKey="seeStreetRequired"/>
        <see selector="{{AdminOrderFormBillingAddressSection.cityError}}" userInput="This is a required field." stepKey="seeCityRequired"/>
        <see selector="{{AdminOrderFormBillingAddressSection.stateError}}" userInput="This is a required field." stepKey="seeStateRequired"/>
        <see selector="{{AdminOrderFormBillingAddressSection.postalCodeError}}" userInput="This is a required field." stepKey="seePostalCodeRequired"/>
        <see selector="{{AdminOrderFormBillingAddressSection.phoneError}}" userInput="This is a required field." stepKey="seePhoneRequired"/>
        <see selector="{{AdminOrderFormPaymentSection.shippingError}}" userInput="This is a required field." stepKey="seeShippingMethodRequired"/>
    </actionGroup>
    <!--Navigate to create order page (New Order -> Select Customer)-->
    <actionGroup name="navigateToNewOrderPageExistingCustomer">
        <arguments>
            <argument name="customer"/>
            <argument name="storeView" defaultValue="_defaultStore"/>
        </arguments>
        <amOnPage url="{{AdminOrdersPage.url}}" stepKey="navigateToOrderIndexPage"/>
        <waitForPageLoad stepKey="waitForIndexPageLoad"/>
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="Orders" stepKey="seeIndexPageTitle"/>
        <click selector="{{AdminMainActionsSection.add}}" stepKey="clickCreateNewOrder"/>
        <waitForPageLoad stepKey="waitForCustomerGridLoad"/>
        <!--Clear grid filters-->
        <conditionalClick selector="{{AdminOrderCustomersGridSection.resetButton}}" dependentSelector="{{AdminOrderCustomersGridSection.resetButton}}" visible="true" stepKey="clearExistingCustomerFilters"/>
        <waitForPageLoad stepKey="waitPageLoadAfterFilterReset"/>
        <fillField userInput="{{customer.email}}" selector="{{AdminOrderCustomersGridSection.emailFilter}}" stepKey="filterEmail"/>
        <click selector="{{AdminOrderCustomersGridSection.searchButton}}" stepKey="applyFilter"/>
        <waitForPageLoad stepKey="waitForFilteredCustomerGridLoad"/>
        <click selector="{{AdminOrderCustomersGridSection.firstRow}}" stepKey="clickOnCustomer"/>
        <waitForPageLoad stepKey="waitForCreateOrderPageLoad"/>
        <!-- Select store view if appears -->
        <conditionalClick selector="{{AdminOrderStoreScopeTreeSection.storeOption(storeView.name)}}" dependentSelector="{{AdminOrderStoreScopeTreeSection.storeOption(storeView.name)}}" visible="true" stepKey="selectStoreViewIfAppears"/>
        <waitForPageLoad stepKey="waitForCreateOrderPageLoadAfterStoreSelect" />
        <see selector="{{AdminHeaderSection.pageTitle}}" userInput="Create New Order" stepKey="seeNewOrderPageTitle"/>
    </actionGroup>
    <!--Add a simple product to order-->
    <actionGroup name="addSimpleProductToOrder">
        <arguments>
            <argument name="product" defaultValue="_defaultProduct"/>
            <argument name="quantity" type="string" defaultValue="1"/>
        </arguments>
        <waitForElementVisible selector="{{AdminOrderFormItemsSection.addProducts}}" stepKey="waitForAddProductVisible"/>
        <click selector="{{AdminOrderFormItemsSection.addProducts}}" stepKey="clickAddProducts"/>
        <fillField selector="{{AdminOrderFormItemsSection.skuFilter}}" userInput="{{product.sku}}" stepKey="fillSkuFilter"/>
        <click selector="{{AdminOrderFormItemsSection.search}}" stepKey="clickSearch"/>
        <scrollTo selector="{{AdminOrderFormItemsSection.rowCheck('1')}}" x="0" y="-100" stepKey="scrollToCheckColumn"/>
        <checkOption selector="{{AdminOrderFormItemsSection.rowCheck('1')}}" stepKey="selectProduct"/>
        <fillField selector="{{AdminOrderFormItemsSection.rowQty('1')}}" userInput="{{quantity}}" stepKey="fillProductQty"/>
        <scrollTo selector="{{AdminOrderFormItemsSection.addSelected}}" x="0" y="-100" stepKey="scrollToAddSelectedButton"/>
        <click selector="{{AdminOrderFormItemsSection.addSelected}}" stepKey="clickAddSelectedProducts"/>
    </actionGroup>
    <!--Add configurable product to order from Admin -->
    <actionGroup name="addConfigurableProductToOrderFromAdmin">
        <arguments>
            <argument name="product"/>
            <argument name="attribute"/>
            <argument name="option"/>
        </arguments>
        <click selector="{{AdminOrderFormItemsSection.addProducts}}" stepKey="clickAddProducts"/>
        <fillField selector="{{AdminOrderFormItemsSection.skuFilter}}" userInput="{{product.sku}}" stepKey="fillSkuFilterConfigurable"/>
        <click selector="{{AdminOrderFormItemsSection.search}}" stepKey="clickSearchConfigurable"/>
        <scrollTo selector="{{AdminOrderFormItemsSection.rowCheck('1')}}" x="0" y="-100" stepKey="scrollToCheckColumn"/>
        <checkOption selector="{{AdminOrderFormItemsSection.rowCheck('1')}}" stepKey="selectConfigurableProduct"/>
        <waitForElementVisible selector="{{AdminOrderFormConfigureProductSection.optionSelect(attribute.default_frontend_label)}}" stepKey="waitForConfigurablePopover"/>
        <wait time="2" stepKey="waitForOptionsToLoad"/>
        <selectOption selector="{{AdminOrderFormConfigureProductSection.optionSelect(attribute.default_frontend_label)}}"
                      userInput="{{option.label}}" stepKey="selectionConfigurableOption"/>
        <click selector="{{AdminOrderFormConfigureProductSection.ok}}" stepKey="clickOkConfigurablePopover"/>
        <scrollTo selector="{{AdminOrderFormItemsSection.addSelected}}" x="0" y="-100" stepKey="scrollToAddSelectedButton"/>
        <click selector="{{AdminOrderFormItemsSection.addSelected}}" stepKey="clickAddSelectedProducts"/>
    </actionGroup>
    <!-- Change product configurations which was added to order -->
    <actionGroup name="configureOrderedConfigurableProduct">
        <arguments>
            <argument name="attribute"/>
            <argument name="option"/>
            <argument name="quantity" type="string"/>
        </arguments>
        <click selector="{{AdminOrderFormItemsSection.configure}}" stepKey="clickConfigure"/>
        <waitForElementVisible selector="{{AdminOrderFormConfigureProductSection.optionSelect(attribute.default_frontend_label)}}" stepKey="waitForConfigurablePopover"/>
        <wait time="2" stepKey="waitForOptionsToLoad"/>
        <selectOption selector="{{AdminOrderFormConfigureProductSection.optionSelect(attribute.default_frontend_label)}}"
                      userInput="{{option.label}}" stepKey="selectionConfigurableOption"/>
        <fillField selector="{{AdminOrderFormConfigureProductSection.quantity}}" userInput="{{quantity}}" stepKey="fillQuantity"/>
        <click selector="{{AdminOrderFormConfigureProductSection.ok}}" stepKey="clickOkConfigurablePopover"/>
    </actionGroup>
    <!--Add bundle product to order -->
    <actionGroup name="addBundleProductToOrder">
        <arguments>
            <argument name="product"/>
            <argument name="quantity" type="string" defaultValue="1"/>
        </arguments>
        <click selector="{{AdminOrderFormItemsSection.addProducts}}" stepKey="clickAddProducts"/>
        <fillField selector="{{AdminOrderFormItemsSection.skuFilter}}" userInput="{{product.sku}}" stepKey="fillSkuFilterBundle"/>
        <click selector="{{AdminOrderFormItemsSection.search}}" stepKey="clickSearchBundle"/>
        <scrollToTopOfPage stepKey="scrollToTop1"/>
        <checkOption selector="{{AdminOrderFormItemsSection.rowCheck('1')}}" stepKey="selectBundleProduct"/>
        <waitForLoadingMaskToDisappear stepKey="waitForMask"/>
        <waitForElementVisible selector="{{AdminOrderFormBundleProductSection.quantity}}" stepKey="waitForBundleOptionLoad"/>
        <fillField selector="{{AdminOrderFormBundleProductSection.quantity}}" userInput="{{quantity}}" stepKey="fillQuantity"/>
        <click selector="{{AdminOrderFormConfigureProductSection.ok}}" stepKey="clickOk"/>
        <scrollToTopOfPage stepKey="scrollToTop2"/>
        <click selector="{{AdminOrderFormItemsSection.addSelected}}" stepKey="clickAddSelectedProducts"/>
    </actionGroup>
    <!--Add bundle product to order and check product price in the grid-->
    <actionGroup name="addBundleProductToOrderAndCheckPriceInGrid" extends="addBundleProductToOrder">
        <arguments>
            <argument name="price" type="string"/>
        </arguments>
        <grabTextFrom selector="{{AdminOrderFormItemsSection.rowPrice('1')}}" stepKey="grabProductPriceFromGrid" after="clickOk"/>
        <assertEquals stepKey="assertProductPriceInGrid" message="Bundle product price in grid should be equal {{price}}" after="grabProductPriceFromGrid">
            <expectedResult type="string">{{price}}</expectedResult>
            <actualResult type="variable">grabProductPriceFromGrid</actualResult>
        </assertEquals>
    </actionGroup>
    <!--Fill customer billing address-->
    <actionGroup name="fillOrderCustomerInformation">
        <arguments>
            <argument name="customer"/>
            <argument name="address"/>
        </arguments>
        <fillField selector="{{AdminOrderFormBillingAddressSection.firstName}}" userInput="{{customer.firstname}}" stepKey="fillFirstName"/>
        <fillField selector="{{AdminOrderFormBillingAddressSection.lastName}}" userInput="{{customer.lastname}}" stepKey="fillLastName"/>
        <fillField selector="{{AdminOrderFormBillingAddressSection.streetLine1}}" userInput="{{address.street[0]}}" stepKey="fillStreetLine1"/>
        <fillField selector="{{AdminOrderFormBillingAddressSection.city}}" userInput="{{address.city}}" stepKey="fillCity"/>
        <selectOption selector="{{AdminOrderFormBillingAddressSection.country}}" userInput="{{address.country_id}}" stepKey="fillCountry"/>
        <selectOption selector="{{AdminOrderFormBillingAddressSection.state}}" userInput="{{address.state}}" stepKey="fillState"/>
        <fillField selector="{{AdminOrderFormBillingAddressSection.postalCode}}" userInput="{{address.postcode}}" stepKey="fillPostalCode"/>
        <fillField selector="{{AdminOrderFormBillingAddressSection.phone}}" userInput="{{address.telephone}}" stepKey="fillPhone"/>
    </actionGroup>
    <!--Check customer billing address fields-->
    <actionGroup name="CheckOrderCustomerBillingInformation">
        <arguments>
            <argument name="customer"/>
            <argument name="address"/>
        </arguments>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.firstName}}" userInput="{{customer.firstname}}" stepKey="checkFirstName"/>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.lastName}}" userInput="{{customer.lastname}}" stepKey="checkLastName"/>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.streetLine1}}" userInput="{{address.street[0]}}" stepKey="checkStreet"/>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.city}}" userInput="{{address.city}}" stepKey="checkCity"/>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.country}}" userInput="{{address.country_id}}" stepKey="checkCountry"/>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.state}}" userInput="{{address.state}}" stepKey="checkState"/>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.postalCode}}" userInput="{{address.postcode}}" stepKey="checkPostCode"/>
        <seeInField selector="{{AdminOrderFormBillingAddressSection.phone}}" userInput="{{address.telephone}}" stepKey="checkTelephone"/>
    </actionGroup>
    <!--Fill customer shipping address-->
    <actionGroup name="FillOrderCustomerShippingInformation">
        <arguments>
            <argument name="customer"/>
            <argument name="address"/>
        </arguments>
        <fillField selector="{{AdminOrderFormShippingAddressSection.firstName}}" userInput="{{customer.firstname}}" stepKey="fillFirstName"/>
        <fillField selector="{{AdminOrderFormShippingAddressSection.lastName}}" userInput="{{customer.lastname}}" stepKey="fillLastName"/>
        <fillField selector="{{AdminOrderFormShippingAddressSection.streetLine1}}" userInput="{{address.street[0]}}" stepKey="fillStreetLine1"/>
        <fillField selector="{{AdminOrderFormShippingAddressSection.city}}" userInput="{{address.city}}" stepKey="fillCity"/>
        <selectOption selector="{{AdminOrderFormShippingAddressSection.country}}" userInput="{{address.country_id}}" stepKey="fillCountry"/>
        <selectOption selector="{{AdminOrderFormShippingAddressSection.state}}" userInput="{{address.state}}" stepKey="fillState"/>
        <fillField selector="{{AdminOrderFormShippingAddressSection.postalCode}}" userInput="{{address.postcode}}" stepKey="fillPostalCode"/>
        <fillField selector="{{AdminOrderFormShippingAddressSection.phone}}" userInput="{{address.telephone}}" stepKey="fillPhone"/>
    </actionGroup>
    <!--Check customer shipping address fields-->
    <actionGroup name="CheckOrderCustomerShippingInformation">
        <arguments>
            <argument name="customer"/>
            <argument name="address"/>
        </arguments>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.firstName}}" userInput="{{customer.firstname}}" stepKey="checkFirstName"/>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.lastName}}" userInput="{{customer.lastname}}" stepKey="checkLastName"/>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.streetLine1}}" userInput="{{address.street[0]}}" stepKey="checkStreet"/>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.city}}" userInput="{{address.city}}" stepKey="checkCity"/>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.country}}" userInput="{{address.country_id}}" stepKey="checkCountry"/>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.state}}" userInput="{{address.state}}" stepKey="checkState"/>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.postalCode}}" userInput="{{address.postcode}}" stepKey="checkPostCode"/>
        <seeInField selector="{{AdminOrderFormShippingAddressSection.phone}}" userInput="{{address.telephone}}" stepKey="checkTelephone"/>
    </actionGroup>
    <!--Select flat rate shipping method-->
    <actionGroup name="orderSelectFlatRateShipping">
        <click selector="{{AdminOrderFormPaymentSection.header}}" stepKey="unfocus"/>
        <waitForPageLoad stepKey="waitForJavascriptToFinish"/>
        <click selector="{{AdminOrderFormPaymentSection.getShippingMethods}}" stepKey="clickShippingMethods"/>
        <waitForElementVisible selector="{{AdminOrderFormPaymentSection.flatRateOption}}" stepKey="waitForShippingOptions"/>
        <selectOption selector="{{AdminOrderFormPaymentSection.flatRateOption}}" userInput="flatrate_flatrate" stepKey="checkFlatRate"/>
    </actionGroup>
    <actionGroup name="chooseOrderCustomer">
        <arguments>
            <argument name="customer"/>
        </arguments>
        <click selector="{{AdminOrderCustomersGridSection.resetButton}}" stepKey="resetCustomersGrid"/>
        <waitForPageLoad stepKey="waitCustomersGridReload"/>
        <fillField selector="{{AdminOrderCustomersGridSection.emailFilter}}" userInput="{{customer.email}}" stepKey="fillEmailFilter"/>
        <click selector="{{AdminOrderCustomersGridSection.searchButton}}" stepKey="searchCustomer"/>
        <waitForPageLoad stepKey="waitCustomersSearch"/>
        <click selector="{{AdminOrderCustomersGridSection.customerRowByEmail(customer.email)}}" stepKey="chooseCustomer"/>
        <waitForPageLoad stepKey="waitForOrderPageLoad"/>
    </actionGroup>
    <!--Verify order information-->
    <actionGroup name="verifyCreatedOrderInformation">
        <see selector="{{AdminMessagesSection.success}}" userInput="You created the order." stepKey="seeSuccessMessage"/>
        <see selector="{{AdminOrderDetailsInformationSection.orderStatus}}" userInput="Pending" after="seeSuccessMessage" stepKey="seeOrderPendingStatus"/>
        <grabTextFrom selector="{{AdminOrderDetailsInformationSection.orderId}}" stepKey="getOrderId"/>
        <assertNotEmpty actual="$getOrderId" stepKey="assertOrderIdIsNotEmpty"/>
    </actionGroup>

    <!--Select free shipping method-->
    <actionGroup name="orderSelectFreeShipping">
        <click selector="{{AdminOrderFormPaymentSection.header}}" stepKey="unfocus"/>
        <waitForPageLoad stepKey="waitForJavascriptToFinish"/>
        <click selector="{{AdminOrderFormPaymentSection.getShippingMethods}}" stepKey="clickShippingMethods"/>
        <waitForElementVisible selector="{{AdminOrderFormPaymentSection.freeShippingOption}}" stepKey="waitForShippingOptions"/>
        <selectOption selector="{{AdminOrderFormPaymentSection.freeShippingOption}}" userInput="freeshipping_freeshipping" stepKey="checkFreeShipping"/>
    </actionGroup>

    <!--Check that customer information is correct in order-->
    <actionGroup name="verifyBasicOrderInformation">
        <arguments>
            <argument name="customer"/>
            <argument name="shippingAddress"/>
            <argument name="billingAddress"/>
            <argument name="customerGroup" defaultValue="GeneralCustomerGroup"/>
        </arguments>
        <see selector="{{AdminOrderDetailsInformationSection.customerName}}" userInput="{{customer.firstname}}" stepKey="seeCustomerName"/>
        <see selector="{{AdminOrderDetailsInformationSection.customerEmail}}" userInput="{{customer.email}}" stepKey="seeCustomerEmail"/>
        <see selector="{{AdminOrderDetailsInformationSection.customerGroup}}" userInput="{{customerGroup.code}}" stepKey="seeCustomerGroup"/>
        <see selector="{{AdminOrderAddressInformationSection.billingAddress}}" userInput="{{billingAddress.street[0]}}" stepKey="seeBillingAddressStreet"/>
        <see selector="{{AdminOrderAddressInformationSection.billingAddress}}" userInput="{{billingAddress.city}}" stepKey="seeBillingAddressCity"/>
        <see selector="{{AdminOrderAddressInformationSection.billingAddress}}" userInput="{{billingAddress.country_id}}" stepKey="seeBillingAddressCountry"/>
        <see selector="{{AdminOrderAddressInformationSection.billingAddress}}" userInput="{{billingAddress.postcode}}" stepKey="seeBillingAddressPostcode"/>
        <see selector="{{AdminOrderAddressInformationSection.shippingAddress}}" userInput="{{shippingAddress.street[0]}}" stepKey="seeShippingAddressStreet"/>
        <see selector="{{AdminOrderAddressInformationSection.shippingAddress}}" userInput="{{shippingAddress.city}}" stepKey="seeShippingAddressCity"/>
        <see selector="{{AdminOrderAddressInformationSection.shippingAddress}}" userInput="{{shippingAddress.country_id}}" stepKey="seeShippingAddressCountry"/>
        <see selector="{{AdminOrderAddressInformationSection.shippingAddress}}" userInput="{{shippingAddress.postcode}}" stepKey="seeShippingAddressPostcode"/>
    </actionGroup>

    <!--Check for product in order items list-->
    <actionGroup name="seeProductInItemsOrdered">
        <arguments>
            <argument name="product"/>
        </arguments>
        <see selector="{{AdminOrderItemsOrderedSection.productSkuColumn}}" userInput="{{product.sku}}" stepKey="seeSkuInItemsOrdered"/>
    </actionGroup>

    <!--Assert that the product is not in the order items list-->
    <actionGroup name="dontSeeProductInItemsOrdered">
        <arguments>
            <argument name="product"/>
        </arguments>
        <dontSee selector="{{AdminOrderItemsOrderedSection.productSkuColumn}}" userInput="{{product.sku}}" stepKey="dontseeSkuInItemsOrdered"/>
    </actionGroup>

    <!--Select Check Money payment method-->
    <actionGroup name="SelectCheckMoneyPaymentMethod">
        <waitForElementVisible selector="{{AdminOrderFormPaymentSection.paymentBlock}}" stepKey="waitForPaymentOptions"/>
        <conditionalClick selector="{{AdminOrderFormPaymentSection.checkMoneyOption}}" dependentSelector="{{AdminOrderFormPaymentSection.checkMoneyOption}}" visible="true" stepKey="checkCheckMoneyOption"/>
    </actionGroup>
    <!--Submit order-->
    <actionGroup name="SubmitOrderActionGroup">
        <click selector="{{AdminOrderFormActionSection.submitOrder}}" stepKey="clickSubmitOrder"/>
        <waitForElementVisible selector="{{AdminMessagesSection.success}}" stepKey="waitForSuccessMessage"/>
        <see selector="{{AdminMessagesSection.success}}" userInput="You created the order." stepKey="seeOrderSuccessMessage"/>
    </actionGroup>
</actionGroups>
