<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="GuestCheckoutVirtualProductAuthorizenetAcceptjsTest">
        <annotations>
            <stories value="Authorize.net Accept.js"/>
            <title value="Guest Checkout of Virtual Product using Authorize.net Accept.js"/>
            <description value="Checkout a virtual product with a guest using Authorize.net Accept.js"/>
            <severity value="CRITICAL"/>
            <testCaseId value="MC-15819"/>
            <useCaseId value="MC-13775"/>
            <skip>
                <issueId value="DEVOPS-4604"/>
            </skip>
            <group value="authorizenetAcceptjs"/>
            <group value="thirdPartyPayments"/>
        </annotations>
        <before>
            <!-- Create virtual product -->
            <createData entity="VirtualProduct" stepKey="createProduct">
                <field key="price">12.34</field>
            </createData>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <!--Configure Auth.net-->
            <actionGroup ref="ConfigureAuthorizenetAcceptjs" stepKey="configureAuthorizenetAcceptjs">
                <argument name="paymentAction" value="Authorize and Capture"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <actionGroup ref="DisableAuthorizenetAcceptjs" stepKey="disableAuthorizenetAcceptjs"/>
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <amOnPage url="{{StorefrontProductPage.url($$createProduct.custom_attributes[url_key]$$)}}" stepKey="goToProductPage"/>

        <!--Add two products to cart -->
        <actionGroup ref="StorefrontAddProductToCartQuantityActionGroup" stepKey="addToCart">
            <argument name="productName" value="$$createProduct.name$$"/>
            <argument name="quantity" value="2"/>
        </actionGroup>

        <!--Checkout steps-->
        <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="goToCheckoutFromMinicartActionGroup"/>
        <fillField selector="{{CheckoutShippingSection.email}}" userInput="{{Simple_US_Customer.email}}" stepKey="enterEmail"/>
        <click selector="{{StorefrontAuthorizenetCheckoutSection.selectAuthorizenet}}" stepKey="clickOnAuthorizenetToggle"/>
        <waitForPageLoad stepKey="waitForBillingInfoLoad"/>
        <actionGroup ref="GuestCheckoutAuthorizenetFillBillingAddress" stepKey="fillAddressForm">
            <argument name="customerAddress" value="CustomerAddressSimple"/>
        </actionGroup>
        <actionGroup ref="StorefrontFillAuthorizenetPaymentInformation" stepKey="fillPaymentInfo"/>
        <!-- Place Order -->
        <actionGroup ref="CheckoutPlaceOrderActionGroup" stepKey="customerPlaceOrder">
            <argument name="orderNumberMessage" value="CONST.successGuestCheckoutOrderNumberMessage"/>
            <argument name="emailYouMessage" value="CONST.successCheckoutEmailYouMessage"/>
        </actionGroup>
        <grabTextFrom selector="{{CheckoutSuccessMainSection.orderNumber}}" stepKey="grabOrderNumber"/>
        <actionGroup ref="OpenOrderById" stepKey="openOrderById">
            <argument name="orderId" value="$grabOrderNumber"/>
        </actionGroup>
        <!--View and validate order-->
        <actionGroup ref="ViewAndValidateOrderActionGroupNoSubmit" stepKey="viewAndValidateOrder">
            <argument name="orderData" value="AuthorizenetAcceptjsVirtualProductOrderValidationData"/>
        </actionGroup>
    </test>
</tests>
