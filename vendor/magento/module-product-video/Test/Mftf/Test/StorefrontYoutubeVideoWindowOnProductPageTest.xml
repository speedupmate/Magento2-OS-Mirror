<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontYoutubeVideoWindowOnProductPageTest">
        <annotations>
            <features value="ProductVideo"/>
            <stories value="MAGETWO-87734: [Sigma Beauty]Cannot pause Youtube video in IE 11"/>
            <testCaseId value="MAGETWO-96677"/>
            <title value="Youtube video window on the product page"/>
            <description value="Check Youtube video window on the product page"/>
            <severity value="MAJOR"/>
            <group value="productVideo"/>
        </annotations>

        <before>
            <!--Log In-->
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <!--Create category-->
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <!--Create product-->
            <createData entity="SimpleProduct" stepKey="createProduct">
                <requiredEntity createDataKey="createCategory"/>
            </createData>
            <!-- Set product video Youtube api key configuration -->
            <createData entity="ProductVideoYoutubeApiKeyConfig" stepKey="setStoreConfig"/>
        </before>

        <after>
            <!--Clear all filters on products grid page-->
            <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="goToProductsIndex"/>
            <actionGroup ref="clearFiltersAdminDataGrid" stepKey="clearExistingProductFilters"/>
            <!--Delete created product and category-->
            <deleteData createDataKey="createProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategoryFirst"/>
            <!-- Set product video configuration to default -->
            <createData entity="DefaultProductVideoConfig" stepKey="setStoreDefaultConfig"/>
            <!--Log Out-->
            <actionGroup ref="logout" stepKey="logout"/>
        </after>

        <!--Open simple product-->
        <amOnPage url="{{AdminProductIndexPage.url}}" stepKey="goToProductIndex"/>
        <actionGroup ref="AdminGridFilterSearchResultsByInput" stepKey="filterProductGridBySku">
            <argument name="inputName" value="sku"/>
            <argument name="value" value="$$createProduct.sku$$"/>
        </actionGroup>
        <click selector="{{AdminDataGridTableSection.firstRow}}" stepKey="openFirstProductForEdit"/>
        <waitForPageLoad stepKey="waitProductPageIsLoaded"/>

        <!-- Add product video -->
        <actionGroup ref="addProductVideo" stepKey="addProductVideo"/>
        <!-- Assert product video in admin product form -->
        <actionGroup ref="assertProductVideoAdminProductPage" stepKey="assertProductVideoAdminProductPage"/>

        <!-- Save the product -->
        <click selector="{{AdminProductFormActionSection.saveButton}}" stepKey="saveProduct"/>
        <waitForPageLoad stepKey="waitForProductSaved"/>

        <!-- Assert product video in storefront product page -->
        <amOnPage url="{{StorefrontProductPage.url($$createProduct.name$$)}}" stepKey="goToStorefrontProductPage"/>
        <actionGroup ref="assertProductVideoStorefrontProductPage" stepKey="assertProductVideoStorefrontProductPage"/>

        <!--Click Play video button-->
        <click selector="{{StorefrontProductInfoMainSection.clickInVideo}}" stepKey="clickToPlayVideo"/>
        <wait time="5" stepKey="waitFiveSecondToPlayVideo"/>
        <switchToIFrame selector="{{StorefrontProductInfoMainSection.frameVideo}}" stepKey="switchToFrame"/>
        <waitForElementVisible selector="{{StorefrontProductInfoMainSection.videoPlayedMode}}" stepKey="waitForVideoPlayed"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.videoPlayedMode}}" stepKey="assertVideoIsPlayed"/>
        <switchToIFrame stepKey="switchBack"/>

        <!--Click Pause button-->
        <click selector="{{StorefrontProductInfoMainSection.clickInVideo}}" stepKey="clickToStopVideo"/>
        <wait time="5" stepKey="waitFiveSecondToStopVideo"/>
        <switchToIFrame selector="{{StorefrontProductInfoMainSection.frameVideo}}" stepKey="switchToFrame1"/>
        <waitForElementVisible selector="{{StorefrontProductInfoMainSection.videoPausedMode}}" stepKey="waitForVideoPaused"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.videoPausedMode}}" stepKey="assertVideoIsPaused"/>
        <switchToIFrame stepKey="switchBack1"/>

        <!--Click Play video button again. Make sure that Video continued playing-->
        <click selector="{{StorefrontProductInfoMainSection.clickInVideo}}" stepKey="clickAgainToPlayVideo"/>
        <wait time="5" stepKey="waitAgainFiveSecondToPlayVideo"/>
        <switchToIFrame selector="{{StorefrontProductInfoMainSection.frameVideo}}" stepKey="switchToFrame2"/>
        <waitForElementVisible selector="{{StorefrontProductInfoMainSection.videoPlayedMode}}" stepKey="waitForVideoPlayedAgain"/>
        <seeElement selector="{{StorefrontProductInfoMainSection.videoPlayedMode}}" stepKey="assertVideoIsPlayedAgain"/>
        <switchToIFrame stepKey="switchBack2"/>
    </test>
</tests>

