<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontQuoteShippingDataPersistedForGuestTest">
        <annotations>
            <features value="Persistent"/>
            <stories value="Checkout via Guest Checkout"/>
            <title value="Estimate Shipping and Tax block sections on shipping cart saving correctly for Guest."/>
            <description value="Verify that 'Estimate Shipping and Tax' block sections on shipping cart saving correctly for Guest after switching to another page. And check that the shopping cart is cleared after reset persistent cookie."/>
            <severity value="CRITICAL"/>
            <testCaseId value="MAGETWO-99048"/>
            <useCaseId value="MAGETWO-98569"/>
            <group value="persistent"/>
            <group value="checkout"/>
        </annotations>
        <before>
            <!--Enabled The Persistent Shopping Cart feature -->
            <createData entity="PersistentConfigEnabled" stepKey="enablePersistent"/>
            <createData entity="PersistentLogoutClearDisabled" stepKey="persistentLogoutClearDisable"/>
            <!--Create category and simple product-->
            <createData entity="SimpleSubCategory" stepKey="createSubCategory"/>
            <createData entity="SimpleProduct2" stepKey="createProduct">
                <requiredEntity createDataKey="createSubCategory"/>
            </createData>
            <!--Create customer-->
            <createData entity="Simple_US_Customer" stepKey="createCustomer">
                <field key="firstname">John1</field>
                <field key="lastname">Doe1</field>
            </createData>
        </before>
        <after>
            <!--Revert persistent configuration to default-->
            <createData entity="PersistentConfigDefault" stepKey="setDefaultPersistentState"/>
            <deleteData createDataKey="createProduct" stepKey="deleteProduct"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <deleteData createDataKey="createSubCategory" stepKey="deleteSubCategory"/>
        </after>
        <!--Step 1: Login as a Customer with remember me checked-->
        <actionGroup ref="CustomerLoginOnStorefrontWithRememberMeChecked" stepKey="loginToStorefrontAccountWithRememberMeChecked">
            <argument name="customer" value="$$createCustomer$$"/>
        </actionGroup>
        <!--Step 2: Open the Product Page and add the product to shopping cart-->
        <amOnPage url="{{StorefrontProductPage.url($$createProduct.custom_attributes[url_key]$$)}}" stepKey="navigateToProductPageAsLoggedUser"/>
        <actionGroup ref="addToCartFromStorefrontProductPage" stepKey="addProductToCartAsLoggedUser">
            <argument name="productName" value="$$createProduct.name$$"/>
        </actionGroup>
        <!--Step 3: Log out, reset persistent cookie and go to homepage-->
        <actionGroup ref="CustomerLogoutStorefrontActionGroup" stepKey="customerLogout"/>
        <resetCookie userInput="persistent_shopping_cart" stepKey="resetPersistentCookie"/>
        <amOnPage url="{{StorefrontHomePage.url}}" stepKey="amOnHomePageAfterResetPersistentCookie"/>
        <!--Step 4: Add the product to shopping cart and open cart-->
        <amOnPage url="{{StorefrontProductPage.url($$createProduct.custom_attributes[url_key]$$)}}" stepKey="navigateToProductPageAsGuestUser"/>
        <actionGroup ref="addToCartFromStorefrontProductPage" stepKey="addProductToCartAsGuestUser">
            <argument name="productName" value="$$createProduct.name$$"/>
        </actionGroup>
        <actionGroup ref="clickViewAndEditCartFromMiniCart" stepKey="goToShoppingCartBeforeChangeShippingAndTaxSection"/>
        <!--Step 5: Open Estimate Shipping and Tax block and fill the sections-->
        <conditionalClick  selector="{{StorefrontCheckoutCartSummarySection.estimateShippingAndTax}}" dependentSelector="{{StorefrontCheckoutCartSummarySection.country}}" visible="false" stepKey="expandEstimateShippingAndTax" />
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMask"/>
        <selectOption selector="{{StorefrontCheckoutCartSummarySection.country}}" userInput="{{US_Address_CA.country}}" stepKey="selectUSCountry"/>
        <waitForPageLoad stepKey="waitAfterSelectCountry"/>
        <selectOption selector="{{StorefrontCheckoutCartSummarySection.region}}" userInput="{{US_Address_CA.state}}" stepKey="selectCaliforniaRegion"/>
        <waitForPageLoad stepKey="waitAfterSelectRegion"/>
        <fillField selector="{{StorefrontCheckoutCartSummarySection.postcode}}" userInput="{{US_Address_CA.postcode}}" stepKey="inputPostCode"/>
        <waitForPageLoad stepKey="waitAfterSelectPostcode"/>
        <!--Step 6: Go to Homepage-->
        <amOnPage url="{{StorefrontHomePage.url}}" stepKey="goToHomePageAfterChangingShippingAndTaxSection"/>
        <!--Step 7: Go to shopping cart and check "Estimate Shipping and Tax" fields values are saved-->
        <actionGroup ref="clickViewAndEditCartFromMiniCart" after="goToHomePageAfterChangingShippingAndTaxSection" stepKey="goToShoppingCartAfterChangingShippingAndTaxSection"/>
        <conditionalClick  selector="{{StorefrontCheckoutCartSummarySection.estimateShippingAndTax}}" dependentSelector="{{StorefrontCheckoutCartSummarySection.country}}" visible="false" stepKey="expandEstimateShippingAndTaxAfterChanging" />
        <waitForLoadingMaskToDisappear stepKey="waitEstimateBlock"/>
        <seeOptionIsSelected selector="{{StorefrontCheckoutCartSummarySection.country}}" userInput="{{US_Address_CA.country}}" stepKey="checkCustomerCountry" />
        <seeOptionIsSelected selector="{{StorefrontCheckoutCartSummarySection.region}}" userInput="{{US_Address_CA.state}}" stepKey="checkCustomerRegion" />
        <grabValueFrom  selector="{{StorefrontCheckoutCartSummarySection.postcode}}" stepKey="grabTextPostCode"/>
        <assertEquals  message="Customer postcode is invalid" stepKey="checkCustomerPostcode">
            <expectedResult type="string">{{US_Address_CA.postcode}}</expectedResult>
            <actualResult type="variable">grabTextPostCode</actualResult>
        </assertEquals>
    </test>
</tests>
