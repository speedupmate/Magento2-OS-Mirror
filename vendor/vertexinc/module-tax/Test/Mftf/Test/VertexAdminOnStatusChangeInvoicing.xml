<?xml version="1.0" encoding="UTF-8" ?>
<!--
 /**
  * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/
  * @author     Mediotype                     https://www.mediotype.com/
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="VertexInvoiceValidationOnOrderStatusPending">
        <annotations>
            <features value="Vertex"/>
            <group value="Vertex"/>
            <testCaseId value="VRTX-713"/>
            <testCaseId value="BUNDLE-959"/>

            <stories value="As a store owner, I must have Vertex invoice sent on the order status change"/>
            <title value="Validate Vertex invoice sending when order status is pending"/>
            <description value="Validate that the Vertex invoice is sent when order is created with status pending."/>

            <severity value="MAJOR"/>
        </annotations>
        <before>
            <!-- Create simple product -->
            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="VertexProductTaxClass_Clothing" stepKey="createTaxClass" />
            <createData entity="VertexSimpleProduct" stepKey="createSimpleProduct">
                <field key="price">{{Vertex_19USD_TCSIX_Values.price}}</field>
                <field key="sku">24-UG01</field>
                <requiredEntity createDataKey="createCategory"/>
                <requiredEntity createDataKey="createTaxClass"/>
            </createData>

            <!-- Create customer -->
            <createData entity="Vertex_Customer_AlanRobinson" stepKey="createCustomer"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>

            <!-- Vertex configuration -->
            <actionGroup ref="VertexTaxConfigOrderStatusPending" stepKey="setupTaxConfigOrderStatusPending"/>
            <actionGroup ref="VertexTaxDefaultConfig" stepKey="setupDefaultVertexTestConfiguration"/>
            <magentoCLI command="cache:clean config" stepKey="cleanConfigCache"/>
        </before>
        <after>
            <createData entity="DefaultTaxConfig" stepKey="defaultConf"/>
            <deleteData createDataKey="createSimpleProduct" stepKey="deleteSimpleProduct"/>
            <deleteData createDataKey="createTaxClass" stepKey="deleteTaxClass"/>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <deleteData createDataKey="createCustomer" stepKey="deleteCustomer"/>
            <actionGroup ref="logout" stepKey="logoutOfAdmin"/>
        </after>

        <!-- Create new order with customer -->
        <actionGroup ref="navigateToNewOrderPageExistingCustomer" stepKey="createNewOrderForCustomer">
            <argument name="customer" value="$$createCustomer$$"/>
        </actionGroup>
        <conditionalClick selector="#store_1" dependentSelector="#order-store-selector" visible="true" stepKey="clickOnDefaultStoreViewIfPresent"/>
        <waitForPageLoad time="30" stepKey="waitForPageLoad"/>
        <actionGroup ref="addSimpleProductToOrder" stepKey="addSimpleProductToOrder">
            <argument name="product" value="$$createSimpleProduct$$"/>
        </actionGroup>
        <waitForPageLoad time="30" stepKey="waitForPageLoadOrder"/>

        <!-- Select shipping and payment methods -->
        <actionGroup ref="SelectCheckMoneyPaymentMethod" stepKey="selectPayment" />
        <actionGroup ref="orderSelectFlatRateShipping" stepKey="setShippingMethod"/>
        <click stepKey="submitOrder" selector="{{AdminOrderFormActionSection.submitOrder}}" />

        <!-- Validate messages -->
        <waitForPageLoad time="30" stepKey="waitForOrderPlace"/>
        <actionGroup ref="VertexCheckInvoiceSuccessMessage" stepKey="checkSuccessMessage"/>
        <see stepKey="seeSuccessMessageForOrder" userInput="You created the order."/>
    </test>
</tests>
