<?xml version="1.0" encoding="UTF-8" ?>
<!--
 /**
  * @copyright  Vertex. All rights reserved.  https://www.vertexinc.com/
  * @author     Mediotype                     https://www.mediotype.com/
  */
-->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">

    <test name="VertexAsGuestWithBillAddressValidationTaxBasedOnShippingSuggestAndUpdateAddress">
        <annotations>
            <features value="Vertex"/>
            <group value="VertexAddressValidation"/>
            <testCaseId value="VRTX-668"/>

            <stories value="As a store owner, I must be able to validate the guest billing address in checkout"/>
            <title value="Validate address when not same as shipping in checkout for quest customer with the tax calculation based on shipping address. We only show the message if the address is not valid and we find a valid result"/>
            <description value="Validate the guest customer address and sudggest changes. The calculation settings for the taxes are done based on shipping address. When the user updates the billing address in checkout we sudggest different values. If the address is valid we just go with the normal checkout flow"/>

            <severity value="CRITICAL"/>
        </annotations>
        <before>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <field key="price">{{Vertex_34USD_PA_Only_Values.price}}</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="VertexAddressValidationDefaultConfig"
                         stepKey="setupDefaultVertexAddressValidationTestConfiguration"/>
            <actionGroup ref="VertexTaxConfigOrderStatusProcessing" stepKey="setupTaxConfigOrderStatusProcessing"/>
            <actionGroup ref="ClearCacheActionGroup" stepKey="clearCache"/>
            <actionGroup ref="logout" stepKey="logoutOfAdminStep"/>

            <actionGroup ref="AddSimpleProductToCart" stepKey="addProductToCart">
                <argument name="product" value="$$createProduct$$"/>
            </actionGroup>

            <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="gotoCheckout"/>

            <actionGroup ref="GuestCheckoutFillShippingNoWaitForPaymentActionGroup" stepKey="fillShippingInformation">
                <argument name="customerVar" value="Vertex_Customer_BobSaget"/>
                <argument name="customerAddressVar" value="Vertex_Customer_BirminghamAlabama_Address"/>
            </actionGroup>

            <actionGroup ref="VertexAddressValidationUpdatedToValidSystemMessage" stepKey="messageWasUpdated">
                <argument name="postCode" value="{{Vertex_Customer_BirminghamAlabama_Address.valid_postcode}}" />
            </actionGroup>

            <uncheckOption selector="{{StorefrontCheckoutPaymentMethodSection.billingAddressSameAsShipping}}"
                           stepKey="uncheckBillingAddressSameAsShippingCheckCheckBox"/>

            <actionGroup ref="StorefrontCheckoutFillNewBillingAddressActionGroup" stepKey="changeAddress">
                <argument name="customerVar" value="Vertex_Customer_BobSaget"/>
                <argument name="customerAddressVar" value="Vertex_Customer_BirminghamAlabama_Address"/>
            </actionGroup>

            <click selector="{{CheckoutPaymentSection.update}}" stepKey="clickOnUpdateButton"/>

            <actionGroup ref="VertexAddressValidationDefaultMessage"
                         stepKey="seeValidationMessage"/>
        </before>
        <after>
            <deleteData stepKey="deleteProduct" createDataKey="createProduct"/>
            <deleteData stepKey="deleteCategory" createDataKey="createCategory"/>
            <actionGroup ref="logout" stepKey="logoutOfAdmin"/>
        </after>

        <actionGroup ref="VertexAddressValidationUpdatedToValidMessage" stepKey="messageWasUpdated">
            <argument name="postCode" value="{{Vertex_Customer_BirminghamAlabama_Address.valid_postcode}}" />
        </actionGroup>

        <actionGroup ref="VertexAddressValidationUpdatedToValidMessageTextFromShippingAddress" stepKey="addressWasUpdatedLocalStorage">
            <argument name="postCode" value="{{Vertex_Customer_BirminghamAlabama_Address.valid_postcode}}" />
        </actionGroup>

        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>
        <waitForPageLoad stepKey="waitSuccess"/>
    </test>

    <test name="VertexAsGuestWithBillAddressValidationTaxBasedOnShippingApiErrorOrInvalid">
        <annotations>
            <features value="Vertex"/>
            <group value="VertexAddressValidation"/>
            <testCaseId value="VRTX-668"/>

            <stories value="As a store owner, I must be able to validate the guest billing address in checkout"/>
            <title value="Validate address when not same as shipping in checkout for quest customer with the tax calculation based on shipping address. The address will trigger a api error on this case."/>
            <description value="Validate the guest customer address and sudggest changes we we find a valid address. The calculation settings for the taxes are done based on shipping address. When the user updates the billing address in checkout we cannot find a valid one and the API will return a error."/>

            <severity value="CRITICAL"/>
        </annotations>
        <before>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <field key="price">{{Vertex_34USD_PA_Only_Values.price}}</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="VertexAddressValidationDefaultConfig"
                         stepKey="setupDefaultVertexAddressValidationTestConfiguration"/>
            <actionGroup ref="VertexTaxConfigOrderStatusProcessing" stepKey="setupTaxConfigOrderStatusProcessing"/>
            <actionGroup ref="ClearCacheActionGroup" stepKey="clearCache"/>
            <actionGroup ref="logout" stepKey="logoutOfAdminStep"/>

            <actionGroup ref="AddSimpleProductToCart" stepKey="addProductToCart">
                <argument name="product" value="$$createProduct$$"/>
            </actionGroup>

            <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="gotoCheckout"/>

            <actionGroup ref="GuestCheckoutFillShippingNoWaitForPaymentActionGroup" stepKey="fillShippingInformation">
                <argument name="customerVar" value="Vertex_Customer_BobSaget"/>
                <argument name="customerAddressVar" value="Vertex_Customer_BirminghamAlabama_Address"/>
            </actionGroup>

            <actionGroup ref="VertexAddressValidationUpdatedToValidSystemMessage" stepKey="messageWasUpdated">
                <argument name="postCode" value="{{Vertex_Customer_BirminghamAlabama_Address.valid_postcode}}" />
            </actionGroup>

            <uncheckOption selector="{{StorefrontCheckoutPaymentMethodSection.billingAddressSameAsShipping}}"
                           stepKey="uncheckBillingAddressSameAsShippingCheckCheckBox"/>

            <actionGroup ref="StorefrontCheckoutFillNewBillingAddressActionGroup" stepKey="changeAddress">
                <argument name="customerVar" value="Vertex_Customer_BobSaget"/>
                <argument name="customerAddressVar" value="Vertex_Customer_ChesterPennsylvania_Address"/>
            </actionGroup>

            <click selector="{{CheckoutPaymentSection.update}}" stepKey="clickOnUpdateButton"/>

            <actionGroup ref="VertexAddressValidationDefaultMessage"
                         stepKey="seeValidationMessage"/>

        </before>
        <after>
            <deleteData stepKey="deleteProduct" createDataKey="createProduct"/>
            <deleteData stepKey="deleteCategory" createDataKey="createCategory"/>
            <actionGroup ref="logout" stepKey="logoutOfAdmin"/>
        </after>

        <see stepKey="warningMessage"
             selector="{{CheckoutShippingSection.addressMessageWarning}}"
             userInput="We did not find a valid address"/>

        <conditionalClick selector="{{CheckoutPaymentSection.update}}"
                          dependentSelector="{{CheckoutShippingSection.addressMessageWarning}}"
                          visible="true"
                          stepKey="clickOnUpdateButtonAfterValidation"/>

        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>
        <waitForPageLoad stepKey="waitSuccess"/>
    </test>

    <test name="VertexAsGuestWithBillAddressValidationTaxBasedOnShippingAddressValid">
        <annotations>
            <features value="Vertex"/>
            <group value="VertexAddressValidation"/>
            <testCaseId value="VRTX-668"/>

            <stories value="As a store owner, I must be able to validate the guest billing address in checkout"/>
            <title value="Validate address when not same as shipping in checkout for quest customer with the tax calculation based on shipping address. We have a valid address and we will show the valid message"/>
            <description value="Validate the guest customer address and suggest changes. The calculation settings for the taxes are done based on shipping address. When the user updates the billing address in checkout we diplay a message that tells the user the address is valid."/>

            <severity value="CRITICAL"/>
        </annotations>
        <before>
            <createData entity="Simple_US_Customer" stepKey="createCustomer"/>

            <createData entity="_defaultCategory" stepKey="createCategory"/>
            <createData entity="_defaultProduct" stepKey="createProduct">
                <field key="price">{{Vertex_34USD_PA_Only_Values.price}}</field>
                <requiredEntity createDataKey="createCategory"/>
            </createData>

            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>
            <actionGroup ref="VertexAddressValidationDefaultConfig"
                         stepKey="setupDefaultVertexAddressValidationTestConfiguration"/>
            <actionGroup ref="VertexTaxConfigOrderStatusProcessing" stepKey="setupTaxConfigOrderStatusProcessing"/>
            <actionGroup ref="ClearCacheActionGroup" stepKey="clearCache"/>
            <actionGroup ref="logout" stepKey="logoutOfAdminStep"/>

            <actionGroup ref="AddSimpleProductToCart" stepKey="addProductToCart">
                <argument name="product" value="$$createProduct$$"/>
            </actionGroup>

            <actionGroup ref="GoToCheckoutFromMinicartActionGroup" stepKey="gotoCheckout"/>

            <actionGroup ref="GuestCheckoutFillShippingNoWaitForPaymentActionGroup" stepKey="fillShippingInformation">
                <argument name="customerVar" value="Vertex_Customer_BobSaget"/>
                <argument name="customerAddressVar" value="Vertex_Customer_BirminghamAlabama_Address"/>
            </actionGroup>

            <actionGroup ref="VertexAddressValidationUpdatedToValidSystemMessage" stepKey="messageWasUpdated">
                <argument name="postCode" value="{{Vertex_Customer_BirminghamAlabama_Address.valid_postcode}}" />
            </actionGroup>

            <uncheckOption selector="{{StorefrontCheckoutPaymentMethodSection.billingAddressSameAsShipping}}"
                           stepKey="uncheckBillingAddressSameAsShippingCheckCheckBox"/>

            <actionGroup ref="StorefrontCheckoutFillNewBillingAddressActionGroup" stepKey="changeAddress">
                <argument name="customerVar" value="Vertex_Customer_BobSaget"/>
                <argument name="customerAddressVar" value="Vertex_Customer_PhiladelphiaPennsylvania_Address"/>
            </actionGroup>

            <click selector="{{CheckoutPaymentSection.update}}" stepKey="clickOnUpdateButton"/>

            <actionGroup ref="VertexAddressValidationDefaultMessage"
                         stepKey="seeValidationMessage"/>

        </before>
        <after>
            <deleteData stepKey="deleteProduct" createDataKey="createProduct"/>
            <deleteData stepKey="deleteCategory" createDataKey="createCategory"/>
            <actionGroup ref="logout" stepKey="logoutOfAdmin"/>
        </after>

        <see stepKey="successMessage"
             selector="{{CheckoutShippingSection.addressMessageWasValid}}"
             userInput="The address is valid"/>

        <conditionalClick selector="{{CheckoutPaymentSection.update}}"
                          dependentSelector="{{CheckoutShippingSection.addressMessageWasValid}}"
                          visible="true"
                          stepKey="clickOnUpdateButtonAfterValidation"/>

        <actionGroup ref="ClickPlaceOrderActionGroup" stepKey="placeOrder"/>
        <waitForPageLoad stepKey="waitSuccess"/>
    </test>

</tests>
