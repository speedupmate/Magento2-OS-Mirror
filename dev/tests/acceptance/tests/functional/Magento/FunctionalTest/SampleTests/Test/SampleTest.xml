<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->
<!-- Test XML Example -->
<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="../../../../../../vendor/magento/magento2-functional-testing-framework/src/Magento/FunctionalTestingFramework/Test/etc/testSchema.xsd">
    <test name="PreAndPostHooksTest">
        <before>
            <amOnUrl url="http://127.0.0.1:32772/admin/" stepKey="amOnPage"/>
            <createData entity="CustomerEntity1" stepKey="createData1"/>
            <createData entity="AssertThis" stepKey="createData2"/>
        </before>
        <after>
            <amOnUrl url="http://127.0.0.1:32772/admin/admin/auth/logout" stepKey="amOnPage"/>
            <deleteData createDataKey="createData1" stepKey="deleteData1"/>
            <deleteData createDataKey="createData2" stepKey="deleteData2"/>
        </after>
    </test>
    <test name="AllCodeceptionMethodsTest">
        <annotations>
            <title value="Create all Codeception methods"/>
            <description value="Exercises the Generator to make sure it creates every Codeception method correctly."/>
            <severity value="CRITICAL"/>
            <testCaseId value="#"/>
        </annotations>
        <acceptPopup stepKey="acceptPopup"/>
        <amOnPage url="/admin" stepKey="amOnPage"/>
        <amOnSubdomain url="admin" stepKey="amOnSubdomain"/>
        <amOnUrl url="http://www.google.com/" stepKey="amOnUrl"/>
        <appendField userInput="More Words" selector=".stuff" stepKey="appendField"/>
        <attachFile userInput="filename.php" selector="#stuff" stepKey="attachFile"/>
        <cancelPopup stepKey="cancelPopup"/>
        <checkOption selector="#checkbox" stepKey="checkOption"/>
        <clearField selector="#field" stepKey="clearField"/>
        <click selector="#button" userInput="Context" stepKey="click1"/>
        <click selectorArray="['link' => 'Login']" stepKey="click2"/>
        <click selectorArray="['link' => 'Login']" userInput="stuff" stepKey="click3"/>
        <clickWithLeftButton selector="#clickHere" stepKey="clickWithLeftButton1" x="23" y="324"/>
        <clickWithLeftButton selectorArray="['css' => '.checkout']" stepKey="clickWithLeftButton2" x="23" y="324"/>
        <clickWithLeftButton stepKey="clickWithLeftButton3" x="23" y="324"/>
        <clickWithRightButton selector="#clickHere" stepKey="clickWithRightButton1" x="23" y="324"/>
        <clickWithRightButton selectorArray="['css' => '.checkout']" stepKey="clickWithRightButton2" x="23" y="324"/>
        <clickWithRightButton stepKey="clickWithRightButton3" x="23" y="324"/>
        <closeTab stepKey="closeTab"/>
        <comment userInput="This is a Comment." stepKey="comment"/>
        <createData entity="CustomerEntity1" stepKey="createData1"/>
        <deleteData createDataKey="createData1" stepKey="deleteData1"/>
        <dontSee userInput="Text" stepKey="dontSee1"/>
        <dontSee userInput="Text" selector=".title" stepKey="dontSee2"/>
        <dontSee userInput="Text" selectorArray="['css' => 'body h1']" stepKey="dontSee3"/>
        <dontSeeCheckboxIsChecked selector="#checkbox" stepKey="dontSeeCheckboxIsChecked"/>
        <dontSeeCookie userInput="cookieName" stepKey="dontSeeCookie1"/>
        <dontSeeCookie userInput="cookieName" parameterArray="['domainName' => 'stuff']" stepKey="dontSeeCookie2"/>
        <dontSeeCurrentUrlEquals url="/stuff" stepKey="dontSeeCurrentUrlEquals"/>
        <dontSeeCurrentUrlMatches  regex="~$/users/(\d+)~" stepKey="dontSeeCurrentUrlMatches"/>
        <dontSeeElement selector=".error" stepKey="dontSeeElement1"/>
        <dontSeeElement selector="input" parameterArray="['name' => 'login']" stepKey="dontSeeElement2"/>
        <dontSeeElementInDOM selector="#stuff" stepKey="dontSeeElementInDOM1"/>
        <dontSeeElementInDOM selector="#stuff" parameterArray="['name' => 'login']" stepKey="dontSeeElementInDOM2"/>
        <dontSeeInCurrentUrl url="/users/" stepKey="dontSeeInCurrentUrl"/>
        <dontSeeInField selector=".field" userInput="stuff" stepKey="dontSeeInField1"/>
        <dontSeeInField selectorArray="['name' => 'search']" userInput="Comment Here" stepKey="dontSeeInField2"/>
        <dontSeeInFormFields selector="form[name=myform]" parameterArray="['input1' => 'non-existent value', 'input2' => 'other non-existent value']" stepKey="dontSeeInFormFields"/>
        <dontSeeInPageSource userInput="Stuff in Page Source" stepKey="dontSeeInPageSource"/>
        <!--<dontSeeInSource html="<h1></h1>" stepKey="dontSeeInSource"/>-->
        <dontSeeInTitle userInput="Title" stepKey="dontSeeInTitle"/>
        <dontSeeLink userInput="Logout" stepKey="dontSeeLink1"/>
        <dontSeeLink userInput="Checkout" url="/store/cart.php" stepKey="dontSeeLink2"/>
        <dontSeeOptionIsSelected selector="#form .stuff" userInput="Option Name" stepKey="dontSeeOptionIsSelected"/>
        <doubleClick selector="#click .here" stepKey="doubleClick"/>
        <dragAndDrop selector1="#number1" selector2="#number2" stepKey="dragAndDrop"/>
        <executeInSelenium function="function(\Facebook\WebDriver\Remote\RemoteWebDriver $webdriver) {$webdriver->get('http://google.com');}" stepKey="executeInSelenium"/>
        <executeJS function="return $('#myField').val()" stepKey="executeJS"/>
        <fillField selector="#field" userInput="stuff" stepKey="fillField1"/>
        <fillField selectorArray="['name' => 'email']" userInput="stuff" stepKey="fillField2"/>
        <grabAttributeFrom selector="#target" userInput="title" stepKey="grabAttributeFrom"/>
        <grabCookie userInput="cookie" parameterArray="['domain' => 'www.google.com']" stepKey="grabCookie"/>
        <grabFromCurrentUrl regex="~$/user/(\d+)/~" stepKey="grabFromCurrentUrl"/>
        <grabMultiple selector="a" userInput="href" stepKey="grabMultiple"/>
        <grabPageSource stepKey="grabPageSource1"/>
        <grabTextFrom selector="h1" stepKey="grabTextFrom1"/>
        <grabValueFrom selector=".form" stepKey="grabValueFrom1"/>
        <grabValueFrom selectorArray="['name' => 'username']" stepKey="grabValueFrom2"/>
        <loadSessionSnapshot userInput="stuff" stepKey="loadSessionSnapshot1"/>
        <loadSessionSnapshot userInput="stuff" stepKey="loadSessionSnapshot2"/>
        <makeScreenshot userInput="ScreenshotName" stepKey="makeScreenshot"/>
        <maximizeWindow stepKey="maximizeWindow"/>
        <moveBack stepKey="moveBack"/>
        <moveForward stepKey="moveForward"/>
        <moveMouseOver selector="#stuff" stepKey="moveMouseOver1"/>
        <moveMouseOver selectorArray="['css' => '.checkout']" stepKey="moveMouseOver2"/>
        <moveMouseOver x="5" y="5" stepKey="moveMouseOver3"/>
        <moveMouseOver selector="#stuff" x="5" y="5" stepKey="moveMouseOver4"/>
        <moveMouseOver selectorArray="['css' => '.checkout']" x="5" y="5" stepKey="moveMouseOver5"/>
        <openNewTab stepKey="openNewTab"/>
        <pauseExecution stepKey="pauseExecution"/>
        <performOn selector=".rememberMe" function="function (WebDriver $I) { $I->see('Remember me next time'); $I->seeElement('#LoginForm_rememberMe'); $I->dontSee('Login'); }" stepKey="performOn1"/>
        <performOn selector=".rememberMe" function="ActionSequence::build()->see('Warning')->see('Are you sure you want to delete this?')->click('Yes')" stepKey="performOn2"/>
        <pressKey selector="#page" userInput="a" stepKey="pressKey1"/>
        <pressKey selector="#page" parameterArray="[['ctrl','a'],'new']" stepKey="pressKey2"/>
        <pressKey selector="#page" parameterArray="[['shift','111'],'1','x']" stepKey="pressKey3"/>
        <pressKey selector="#page" parameterArray="[['ctrl', 'a'], \Facebook\WebDriver\WebDriverKeys::DELETE]" stepKey="pressKey4"/>
        <!--pressKey selector="descendant-or-self::*[@id='page']" userInput="u" stepKey="pressKey5"/-->
        <reloadPage stepKey="reloadPage"/>
        <resetCookie userInput="cookie" stepKey="resetCookie1"/>
        <resetCookie userInput="cookie" parameterArray="['domainName' => 'www.google.com']" stepKey="resetCookie2"/>
        <resizeWindow width="800" height="600" stepKey="resizeWindow"/>
        <saveSessionSnapshot userInput="stuff" stepKey="saveSessionSnapshot"/>
        <scrollTo selector="#place" x="20" y="50" stepKey="scrollTo1"/>
        <scrollTo selectorArray="['css' => '.checkout']" x="20" y="50" stepKey="scrollTo2"/>
        <see userInput="Stuff" stepKey="see1"/>
        <see userInput="More Stuff" selector=".stuff" stepKey="see2"/>
        <see userInput="More More Stuff" selectorArray="['css' => 'body h1']" stepKey="see3"/>
        <seeCheckboxIsChecked selector="#checkbox" stepKey="seeCheckboxIsChecked"/>
        <seeCookie userInput="PHPSESSID" stepKey="seeCookie1"/>
        <seeCookie userInput="PHPSESSID" parameterArray="['domainName' => 'www.google.com']" stepKey="seeCookie2"/>
        <seeCurrentUrlEquals url="/" stepKey="seeCurrentUrlEquals"/>
        <seeCurrentUrlMatches regex="~$/users/(\d+)~" stepKey="seeCurrentUrlMatches"/>
        <seeElement selector=".error" stepKey="seeElement1"/>
        <seeElement selectorArray="['css' => 'form input']" stepKey="seeElement2"/>
        <seeElement selector=".error" parameterArray="['name' => 'login']" stepKey="seeElement3"/>
        <seeElement selectorArray="['css' => 'form input']" parameterArray="['name' => 'login']" stepKey="seeElement4"/>
        <seeElementInDOM selector="//form/input[type=hidden]" stepKey="seeElementInDOM1"/>
        <seeElementInDOM selector="//form/input[type=hidden]" parameterArray="['name' => 'form']" stepKey="seeElementInDOM2"/>
        <seeInCurrentUrl url="home" stepKey="seeInCurrentUrl1"/>
        <seeInCurrentUrl url="/home/" stepKey="seeInCurrentUrl2"/>
        <seeInField userInput="Stuff" selector="#field" stepKey="seeInField1"/>
        <seeInField userInput="Stuff" selectorArray="['name' => 'search']" stepKey="seeInField2"/>
        <seeInFormFields selector="form[name=myform]" parameterArray="['input1' => 'value','input2' => 'other value']" stepKey="seeInFormFields1"/>
        <seeInFormFields selector=".form-class" parameterArray="[['multiselect' => ['value1','value2'],'checkbox[]]' => ['a checked value','another checked value',]]" stepKey="seeInFormFields2"/>
        <!--<seeInPageSource html="<h1></h1>" stepKey="seeInPageSource"/>-->
        <seeInPopup userInput="Yes in Popup" stepKey="seeInPopup"/>
        <!--<seeInSource html="<h1></h1>" stepKey="seeInSource"/>-->
        <seeInTitle userInput="In Title" stepKey="seeInTitle"/>
        <seeLink userInput="Logout" stepKey="seeLink1"/>
        <seeLink userInput="Logout" url="/logout" stepKey="seeLink2"/>
        <seeNumberOfElements selector="tr" userInput="10" stepKey="seeNumberOfElements1"/>
        <seeNumberOfElements selector="tr" userInput="[0, 10]" stepKey="seeNumberOfElements2"/>
        <seeOptionIsSelected selector=".option" userInput="Visa" stepKey="seeOptionIsSelected"/>
        <selectOption selector=".dropDown" userInput="Option Name" stepKey="selectOption1"/>
        <selectOption selector="//form/select[@name=account]" parameterArray="['Windows','Linux']" stepKey="selectOption2"/>
        <selectOption selector="Which OS do you use?" parameterArray="['text' => 'Windows']" stepKey="selectOption3"/>
        <setCookie userInput="PHPSESSID" value="stuff" stepKey="setCookie1"/>
        <setCookie userInput="PHPSESSID" value="stuff" parameterArray="['domainName' => 'www.google.com']" stepKey="setCookie2"/>
        <submitForm selector="#my-form" parameterArray="['field' => ['value','another value',]]" button="#submit" stepKey="submitForm2"/>
        <switchToIFrame stepKey="switchToIFrame1"/>
        <switchToIFrame userInput="another_frame" stepKey="switchToIFrame2"/>
        <switchToNextTab stepKey="switchToNextTab1"/>
        <switchToNextTab userInput="2" stepKey="switchToNextTab2"/>
        <switchToPreviousTab stepKey="switchToPreviewTab1"/>
        <switchToPreviousTab userInput="1" stepKey="switchToPreviewTab2"/>
        <switchToWindow stepKey="switchToWindow1"/>
        <switchToWindow userInput="another_window" stepKey="switchToWindow2"/>
        <typeInPopup userInput="Stuff for popup" stepKey="typeInPopup"/>
        <uncheckOption selector="#option" stepKey="uncheckOption"/>
        <unselectOption selector="#dropDown" userInput="Option" stepKey="unselectOption"/>
        <wait time="15" stepKey="wait"/>
        <waitForElement selector="#button" time="10" stepKey="waitForElement"/>
        <waitForElementChange selector="#menu" function="function(\WebDriverElement $el) {return $el->isDisplayed();}" time="100" stepKey="waitForElementChange"/>
        <waitForElementNotVisible selector="#a_thing .className" time="30" stepKey="waitForElementNotVisible"/>
        <waitForElementVisible selector="#a_thing .className" time="15" stepKey="waitForElementVisible"/>
        <waitForJS function="return $.active == 0;" time="30" stepKey="waitForJS"/>
        <waitForText userInput="foo" time="30" stepKey="waitForText1"/>
        <waitForText userInput="foo" selector=".title" time="30" stepKey="waitForText2"/>
    </test>
    <test name="AllCustomMethodsTest">
        <annotations>
            <title value="Create all Custom methods"/>
            <description value="Exercises the Generator to make sure it creates every Custom method correctly."/>
            <severity value="CRITICAL"/>
            <testCaseId value="#"/>
        </annotations>
        <assertElementContainsAttribute selector="#username" attribute="class" expectedValue="admin__control-text" stepKey="assertElementContainsAttribute1"/>
        <assertElementContainsAttribute selector="#username" attribute="type" expectedValue="text" stepKey="assertElementContainsAttribute2"/>
        <assertElementContainsAttribute selector="#username" attribute="name" expectedValue="login[username]" stepKey="assertElementContainsAttribute3"/>
        <assertElementContainsAttribute selector="#username" attribute="autofocus" expectedValue="" stepKey="assertElementContainsAttribute4"/>
        <assertElementContainsAttribute selector="#username" attribute="data-validate" expectedValue="{required:true}" stepKey="assertElementContainsAttribute5"/>
        <assertElementContainsAttribute selector="#username" attribute="placeholder" expectedValue="user name" stepKey="assertElementContainsAttribute6"/>
        <assertElementContainsAttribute selector="#username" attribute="autocomplete" expectedValue="off" stepKey="assertElementContainsAttribute7"/>
        <assertElementContainsAttribute selector=".admin__menu-overlay" attribute="style" expectedValue="display: none;" stepKey="assertElementContainsAttribute8"/>
        <assertElementContainsAttribute selector=".admin__menu-overlay" attribute="border" expectedValue="0" stepKey="assertElementContainsAttribute9"/>
        <closeAdminNotification stepKey="closeAdminNotification1"/>
        <searchAndMultiSelectOption selector="#stuff" parameterArray="['Item 1', 'Item 2']" stepKey="searchAndMultiSelect1"/>
        <searchAndMultiSelectOption selector="#stuff" parameterArray="['Item 1', 'Item 2']" requiredAction="true" stepKey="searchAndMultiSelect2"/>
        <waitForPageLoad stepKey="waitForPageLoad1"/>
        <waitForPageLoad time="15" stepKey="waitForPageLoad2"/>
        <waitForAjaxLoad stepKey="waitForAjax1"/>
        <waitForAjaxLoad time="15" stepKey="waitForAjax2"/>
        <dontSeeJsError stepKey="dontSeeJsError"/>
        <formatMoney userInput="$300,000" stepKey="formatMoney1"/>
        <formatMoney userInput="$300,000" locale="en_US.UTF-8" stepKey="formatMoney2"/>
        <mSetLocale userInput="300" locale="en_US.UTF-8" stepKey="mSetLocale1"/>
        <mResetLocale stepKey="mResetLocale1"/>
        <waitForLoadingMaskToDisappear stepKey="waitForLoadingMaskToDisappear1"/>
        <scrollToTopOfPage stepKey="scrollToTopOfPage"/>
        <parseFloat userInput="300,000.2325" stepKey="parseFloat1"/>
        <magentoCLI stepKey="enableMaintenance1" command="maintenance:enable"/>
    </test>
    <test name="AllVariableMethodsTest">
        <annotations>
            <title value="Create all Methods that support Variables."/>
            <description value="Exercises the Generator to make sure it creates every Method that supports a Variable."/>
            <severity value="CRITICAL"/>
            <testCaseId value="#"/>
        </annotations>
        <grabFromCurrentUrl stepKey="grabFromCurrentUrl1"/>
        <amOnPage url="{$randomStuff}" stepKey="amOnPage1"/>
        <amOnSubdomain url="{$randomStuff}" stepKey="amOnSubdomain1"/>
        <amOnUrl url="{$randomStuff}" stepKey="amOnUrl1"/>
        <appendField userInput="{$randomStuff}" selector="#randomField" stepKey="appendField1"/>
        <attachFile userInput="{$randomStuff}" selector="#filePathField" stepKey="attachFile1"/>
        <click userInput="{$randomStuff}" stepKey="click1"/>
        <dontSee userInput="{$randomStuff}" stepKey="dontSee1"/>
        <dontSeeCookie userInput="{$randomStuff}" stepKey="dontSeeCookie1"/>
        <dontSeeCurrentUrlEquals url="{$randomStuff}" stepKey="dontSeeCurrentUrlEquals1"/>
        <dontSeeCurrentUrlMatches regex="{$randomStuff}" stepKey="dontSeeCurrentUrlMatches1"/>
        <dontSeeInCurrentUrl url="{$randomStuff}" stepKey="dontSeeInCurrentUrl1"/>
        <dontSeeInField selector="#stuff" userInput="{$randomStuff}" stepKey="dontSeeInField1"/>
        <dontSeeInPageSource userInput="{$randomStuff}" stepKey="dontSeeInPageSource1"/>
        <dontSeeInTitle userInput="{$randomStuff}" stepKey="dontSeeInTitle1"/>
        <dontSeeLink userInput="{$randomStuff}" stepKey="dontSeeLink1"/>
        <dontSeeOptionIsSelected selector="#dropdown" userInput="{$randomStuff}" stepKey="dontSeeOptionIsSelected1"/>
        <fillField userInput="{$randomStuff}" selector="#field" stepKey="fillField1"/>
        <grabAttributeFrom selector="#stuff" userInput="{$randomStuff}" stepKey="grabAttributeFrom1"/>
        <grabCookie userInput="{$randomStuff}" stepKey="grabValueFrom1"/>
        <grabFromCurrentUrl regex="{$randomStuff}" stepKey="grabFromCurrentUrl"/>
        <grabMultiple selector="a" userInput="{$randomStuff}" stepKey="grabMultiple1"/>
        <loadSessionSnapshot userInput="{$randomStuff}" stepKey="loadSessionSnapshot"/>
        <pressKey selector="a" userInput="{$randomStuff}" stepKey="pressKey1"/>
        <saveSessionSnapshot userInput="{$randomStuff}" stepKey="saveSessionSnapshot1"/>
        <see userInput="{$randomStuff}" stepKey="see1"/>
        <seeCookie userInput="{$randomStuff}" stepKey="seeCookie1"/>
        <seeCurrentUrlEquals url="{$randomStuff}" stepKey="seeCurrentUrlEquals1"/>
        <seeCurrentUrlMatches regex="{$randomStuff}" stepKey="seeCurrentUrlMatches1"/>
        <seeInCurrentUrl url="{$randomStuff}" stepKey="seeInCurrentUrl1"/>
        <seeInField selector="a" userInput="{$randomStuff}" stepKey="seeInField1"/>
        <seeInPopup userInput="{$randomStuff}" stepKey="seeInPopup"/>
        <seeInTitle userInput="{$randomStuff}" stepKey="seeInTitle1"/>
        <seeLink userInput="{$randomStuff}" stepKey="seeLink1"/>
        <seeNumberOfElements selector="#stuff" userInput="{$randomStuff}" stepKey="seeNumberOfElements1"/>
        <seeOptionIsSelected selector="#stuff" userInput="{$randomStuff}" stepKey="seeOptionIsSelected1"/>
        <selectOption selector="#stuff" userInput="{$randomStuff}" stepKey="selectOption1"/>
        <switchToIFrame userInput="{$randomStuff}" stepKey="switchToIFrame1"/>
        <switchToNextTab userInput="{$randomStuff}" stepKey="switchToNextTab2"/>
        <switchToPreviousTab userInput="{$randomStuff}" stepKey="switchToPreviousTab1"/>
        <switchToNextTab userInput="{$randomStuff}" stepKey="switchToNextTab3"/>
        <switchToWindow userInput="{$randomStuff}" stepKey="switchToWindow1"/>
        <typeInPopup userInput="{$randomStuff}" stepKey="typeInPopup"/>
        <unselectOption selector="#option" userInput="{$randomStuff}" stepKey="unselectOption1"/>
        <waitForText userInput="{$randomStuff}" time="5" stepKey="waitForText1"/>
    </test>
    <test name="AllReplacementTest">
        <annotations>
            <title value="Exercise reference replacement."/>
            <description value="Exercises {{foo}}, $foo$, and $$foo$$ replacement."/>
            <severity value="CRITICAL"/>
            <testCaseId value="#"/>
        </annotations>

        <createData entity="CustomerEntity1" stepKey="testScopeData"/>
        <createData entity="AssertThis" stepKey="testScopeData2"/>

        <!-- parameterized url that uses literal params -->
        <amOnPage url="{{SamplePage.url('success','success2')}}" stepKey="a0"/>

        <!-- url referencing data that was created in this <test> -->
        <amOnPage url="$testScopeData.firstname$.html" stepKey="a1"/>

        <!-- url referencing data that was created in a <before> -->
        <amOnPage url="$$createData1.firstname$$.html" stepKey="a2"/>

        <!-- parameterized url that uses created data params -->
        <amOnPage url="{{SamplePage.url($testScopeData.firstname$,$testScopeData.lastname$)}}" stepKey="a3"/>
        <amOnPage url="{{SamplePage.url($$createData1.firstname$$,$$createData1.lastname$$)}}" stepKey="a4"/>

        <!-- parameterized selector that uses literal params -->
        <click selector="{{SampleSection.oneParamElement('success')}}" stepKey="c1"/>
        <click selector="{{SampleSection.twoParamElement('success','success2')}}" stepKey="c2"/>

        <!-- parameterized selector with literal, static data, and created data  -->
        <click selector="{{SampleSection.threeParamElement('John', SamplePerson.lastname, $testScopeData.lastname$)}}" stepKey="c3"/>

        <!-- selector that uses created data -->
        <click selector="#$testScopeData.firstname$ .$testScopeData.lastname$" stepKey="c4"/>
        <click selector="#$$createData1.firstname$$ .$$createData1.lastname$$" stepKey="c5"/>

        <!-- userInput that uses created data -->
        <fillField selector="#sample" userInput="Hello $testScopeData.firstname$ $testScopeData.lastname$" stepKey="f1"/>
        <fillField selector="#sample" userInput="Hello $$createData1.firstname$$ $$createData1.lastname$$" stepKey="f2"/>
    </test>
</tests>
